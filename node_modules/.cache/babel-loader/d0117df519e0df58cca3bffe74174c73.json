{"ast":null,"code":"var _jsxFileName = \"/opt/management-taptapnow/src/components/form/CustomerInfo.js\";\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport './form.css';\nimport { Button, Card, CardActions, CardContent, CardHeader, Grid, Divider, Switch, TextField, Typography, colors, Avatar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { Link, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { userContext, getUserById } from '../../utils/userContext';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport icon_camera from '../../assets/images/icon_camera.png';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport axios from 'axios';\nimport { urlFunction } from '../../utils/urls';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport PhoneInput from 'react-phone-input-2';\n\nconst styles = theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  },\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  },\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlgin: 'center',\n    width: 700\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 140,\n    width: 140\n  }\n});\n\nclass CustomerInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      let user = await userContext();\n\n      if (user !== null) {\n        this.setState({\n          user: JSON.parse(user),\n          isLogin: true\n        });\n      } else {\n        this.setState({\n          isLogin: false\n        });\n      }\n\n      let userResult = await getUserById(this.props.iduser, JSON.parse(user).token);\n      this.setState({\n        userResult: userResult,\n        'name_user': userResult.name_user,\n        'first_name': userResult.first_name,\n        'last_name': userResult.last_name,\n        'email_user': userResult.email_user,\n        'tel_user': userResult.tel_user,\n        'user_address': userResult.user_address,\n        'actif_user': userResult.actif_user,\n        // 'imagePreviewUrl': userResult.photo_user,\n        'photo_user': userResult.photo_user\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => {\n        console.log(\"Adress full result\", results[0]);\n        return getLatLng(results[0]);\n      }).then(latLng => {\n        this.setState({\n          user_address: address,\n          latLng: latLng,\n          long_restaurant: latLng.lng,\n          lat_restaurant: latLng.lat\n        }); // console.log('get lat', { latLng  })\n      }).catch(error => console.error('Error', error));\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\" event.target.value  \", event.target.value);\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        openBackdrop: !this.state.openBackdrop\n      });\n      e.preventDefault();\n      let data = new FormData();\n      data.append('photo_user', this.state.file);\n      data.append('first_name', this.state.first_name);\n      data.append('last_name', this.state.last_name);\n      data.append('email_user', this.state.email_user);\n      data.append('tel_user', this.state.tel_user);\n      data.append('user_address', this.state.user_address);\n      data.append('name_user', this.state.name_user);\n      data.append('is_first_time_login', 1);\n      data.append('id_user', this.props.iduser);\n      const config = {\n        method: 'POST',\n        headers: {\n          Authorization: 'bearer ' + this.state.user.token\n        },\n        body: data\n      };\n      fetch(\"\".concat(urlFunction(), \"/user/update\"), config).then(response => {\n        return response.json();\n      }).then(data => {\n        if (data) {\n          this.setState({\n            openBackdrop: !this.state.openBackdrop,\n            showSucess: true\n          });\n        }\n      }).catch(e => {\n        this.setState({\n          email_user: '',\n          showSucess: false,\n          openBackdrop: !this.state.openBackdrop\n        });\n        alert(e.message);\n      });\n    };\n\n    this._handleImageChange = e => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      if (file) {\n        reader.readAsDataURL(file);\n\n        reader.onloadend = () => {\n          this.setState({\n            file: file,\n            imagePreviewUrl: reader.result,\n            logoToSend: file,\n            photo_user: reader.result\n          });\n        };\n      }\n    };\n\n    this.updatePassword = e => {\n      if (this.state.password_user != this.state.confirm_password) {\n        this.setState({\n          showPAsswordConfirmError: true\n        });\n      } else {\n        this.setState({\n          openBackdrop: !this.state.openBackdrop,\n          showPAsswordConfirmError: false\n        });\n        e.preventDefault();\n        let data = {\n          'password_user': this.state.password_user,\n          'is_first_time_login': 1,\n          id_user: this.props.iduser\n        };\n        axios.post(\"\".concat(urlFunction(), \"/user/update\"), data, {\n          headers: {\n            Authorization: 'bearer ' + this.state.user.token\n          }\n        }).then(res => {\n          this.setState({\n            openBackdrop: !this.state.openBackdrop,\n            showSucessPasswordUpdate: true\n          });\n        }).catch(err => {\n          console.log(\"error\", err);\n          this.setState({\n            showSucess: false,\n            openBackdrop: !this.state.openBackdrop\n          });\n        });\n      }\n    };\n\n    this.handleCloseSnackbar = () => {\n      this.setState({\n        showSucess: !this.state.showSucess\n      });\n    };\n\n    this.handleCloseSnackbarPassWord = () => {\n      this.setState({\n        showSucessPasswordUpdate: false\n      });\n    };\n\n    this.handleChangeAdress = user_address => {\n      this.setState({\n        user_address: user_address\n      });\n    };\n\n    this.selectImg = React.createRef();\n    this.state = {\n      showSucess: false,\n      openBackdrop: false,\n      showPAsswordConfirmError: false,\n      showSucessPasswordUpdate: false,\n      userResult: {},\n      file: '',\n      logoToSend: '',\n      imagePreviewUrl: '',\n      user_address: '',\n      active: 1,\n      unactive: 0,\n      password_user: '',\n      confirm_password: '',\n      photo_user: ''\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        imagePreviewUrl = _this$state.imagePreviewUrl,\n        values = _this$state.values,\n        profile = _this$state.profile,\n        userResult = _this$state.userResult,\n        openBackdrop = _this$state.openBackdrop;\n    let classes = this.props.classes;\n\n    if (this.state.isLogin == false) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        marginTop: 80,\n        marginLeft: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginRight: 16,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/customer\",\n      style: {\n        textDecoration: \"none\",\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(ArrowBackIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \" Edit profile \"))), React.createElement(\"div\", {\n      className: \"contentBoxInfo\",\n      style: {\n        marginTop: 90,\n        marginLeft: 20,\n        marginRight: 20,\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Backdrop, {\n      className: classes.backdrop,\n      open: openBackdrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, this.state.showSucess == true ? React.createElement(Alert, {\n      onClose: this.handleCloseSnackbar,\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Informations 're update\") : null, React.createElement(\"div\", {\n      className: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, this.state.photo_user == '' ? React.createElement(\"div\", {\n      className: \"imageContent\",\n      style: {\n        padding: 20\n      },\n      onClick: () => this.fileInputForProfilePic.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      src: icon_camera,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"imageContent\",\n      style: {\n        padding: 20\n      },\n      onClick: () => this.fileInputForProfilePic.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      src: imagePreviewUrl == '' ? \"http://3.12.104.179:3001/api/v2/api/path?img_profil=\".concat(this.state.photo_user) : imagePreviewUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      fullWidth: true,\n      name: \"address\",\n      onChange: this._handleImageChange,\n      type: \"file\",\n      id: \"file\",\n      ref: fileInputForProfilePic => this.fileInputForProfilePic = fileInputForProfilePic,\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }))), React.createElement(Typography, {\n      className: classes.name,\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, this.state.name_user), React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, this.state.email_user), React.createElement(\"div\", {\n      style: {\n        marginTop: 40,\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Update password\")), React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      label: \"Password\",\n      name: \"password_user\",\n      onChange: this.handleChange,\n      type: \"password\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      label: \"Confirm password\",\n      name: \"confirm_password\",\n      onChange: this.handleChange,\n      type: \"password\",\n      variant: \"outlined\",\n      error: this.state.showPAsswordConfirmError,\n      helperText: \" Confirm password can't be different than password \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, this.state.showSucessPasswordUpdate == true ? React.createElement(Alert, {\n      onClose: this.handleCloseSnackbarPassWord,\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"The password have been updated\") : null), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, this.state.password_user != '' ? React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.updatePassword,\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, \"Update password\")) : null)))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      label: \"First name\",\n      name: \"first_name\",\n      onChange: this.handleChange,\n      value: this.state.first_name,\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      label: \"Last name\",\n      name: \"last_name\",\n      onChange: this.handleChange,\n      value: this.state.last_name,\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true // helperText=\"Please specify the first name\"\n      ,\n      label: \"User name\",\n      name: \"name_user\",\n      onChange: this.handleChange,\n      value: this.state.name_user,\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      label: \"Email Address\",\n      name: \"email_user\",\n      variant: \"outlined\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: this.handleChange,\n      value: this.state.email_user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(PhoneInput, {\n      country: 'us',\n      value: this.state.tel_user,\n      placeholder: 'Phone number' // onlyCountries={['ca', 'ht', 'us']}\n      ,\n      inputProps: {\n        name: 'phone',\n        required: true,\n        autoFocus: false\n      },\n      onChange: tel_user => this.setState({\n        tel_user\n      }),\n      inputStyle: {\n        paddding: 12,\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, React.createElement(PlacesAutocomplete, {\n      value: this.state.user_address,\n      onChange: this.handleChangeAdress,\n      onSelect: this.handleSelect // shouldFetchSuggestions={}\n      ,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, React.createElement(TextField, Object.assign({\n      autoComplete: \"off\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"user_address\",\n      label: \" Address\"\n    }, getInputProps({\n      placeholder: 'Address ',\n      className: 'location-search-input'\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          paddingTop: 10,\n          paddingBottom: 10,\n          paddingLeft: 4,\n          paddingRight: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, suggestion.description));\n    }))))), React.createElement(Grid, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, \"Save Changes\"))))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default withStyles(styles)(CustomerInfo);","map":{"version":3,"sources":["/opt/management-taptapnow/src/components/form/CustomerInfo.js"],"names":["React","Component","clsx","PropTypes","makeStyles","Button","Card","CardActions","CardContent","CardHeader","Grid","Divider","Switch","TextField","Typography","colors","Avatar","Alert","Link","Redirect","withStyles","userContext","getUserById","ArrowBackIcon","icon_camera","CircularProgress","Backdrop","axios","urlFunction","geocodeByAddress","geocodeByPlaceId","getLatLng","PlacesAutocomplete","PhoneInput","styles","theme","backdrop","zIndex","drawer","color","root","saveButton","palette","white","backgroundColor","green","content","display","alignItems","flexDirection","textAlgin","width","name","marginTop","spacing","avatar","height","CustomerInfo","constructor","props","componentDidMount","user","setState","JSON","parse","isLogin","userResult","iduser","token","name_user","first_name","last_name","email_user","tel_user","user_address","actif_user","photo_user","handleSelect","address","then","results","console","log","latLng","long_restaurant","lng","lat_restaurant","lat","catch","error","handleChange","event","target","value","handleSubmit","e","openBackdrop","state","preventDefault","data","FormData","append","file","config","method","headers","Authorization","body","fetch","response","json","showSucess","alert","message","_handleImageChange","reader","FileReader","files","readAsDataURL","onloadend","imagePreviewUrl","result","logoToSend","updatePassword","password_user","confirm_password","showPAsswordConfirmError","id_user","post","res","showSucessPasswordUpdate","err","handleCloseSnackbar","handleCloseSnackbarPassWord","handleChangeAdress","selectImg","createRef","active","unactive","render","values","profile","classes","justifyContent","marginLeft","marginRight","cursor","textDecoration","padding","fileInputForProfilePic","click","marginBottom","shrink","required","autoFocus","paddding","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","style","paddingTop","paddingBottom","paddingLeft","paddingRight","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,YAAP;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,MARF,EASEC,SATF,EAUEC,UAVF,EAWIC,MAXJ,EAYIC,MAZJ,QAaO,mBAbP;AAcA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA0B,0BAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACCC,gBADD,EAECC,gBAFD,EAGCC,SAHD,QAIO,2BAJP;AAMA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,QAAQ,EAAE;AACZC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaC,MAAb,GAAsB,CADlB;AAEZC,IAAAA,KAAK,EAAE;AAFK,GADW;AAKvBC,EAAAA,IAAI,EAAE,EALiB;AAMvBC,EAAAA,UAAU,EAAE;AACVF,IAAAA,KAAK,EAAEJ,KAAK,CAACO,OAAN,CAAcC,KADX;AAEVC,IAAAA,eAAe,EAAE7B,MAAM,CAAC8B,KAAP,CAAa,GAAb,CAFP;AAGV,eAAW;AACPD,MAAAA,eAAe,EAAE7B,MAAM,CAAC8B,KAAP,CAAa,GAAb;AADV;AAHD,GANW;AAarBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,SAAS,EAAE,QAJN;AAKLC,IAAAA,KAAK,EAAE;AALF,GAbY;AAoBrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAElB,KAAK,CAACmB,OAAN,CAAc,CAAd;AADT,GApBe;AAwBrBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,GADJ;AAEJL,IAAAA,KAAK,EAAE;AAFH;AAxBa,CAAL,CAApB;;AA8BA,MAAMM,YAAN,SAA2BxD,SAA3B,CAAsC;AAClCyD,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,iBArBmB,GAqBC,YAAY;AAE5B,UAAIC,IAAI,GAAG,MAAMxC,WAAW,EAA5B;;AAEA,UAAIwC,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAKC,QAAL,CAAc;AACZD,UAAAA,IAAI,EAAEE,IAAI,CAACC,KAAL,CAAWH,IAAX,CADM;AAEZI,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OALD,MAKO;AACL,aAAKH,QAAL,CAAc;AACZG,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;;AAED,UAAIC,UAAU,GAAG,MAAM5C,WAAW,CAAC,KAAKqC,KAAL,CAAWQ,MAAZ,EAAoBJ,IAAI,CAACC,KAAL,CAAWH,IAAX,EAAiBO,KAArC,CAAlC;AAEA,WAAKN,QAAL,CAAc;AACVI,QAAAA,UAAU,EAAEA,UADF;AAEV,qBAAaA,UAAU,CAACG,SAFd;AAGV,sBAAcH,UAAU,CAACI,UAHf;AAIV,qBAAYJ,UAAU,CAACK,SAJb;AAKV,sBAAcL,UAAU,CAACM,UALf;AAMV,oBAAYN,UAAU,CAACO,QANb;AAOV,wBAAgBP,UAAU,CAACQ,YAPjB;AAQV,sBAAcR,UAAU,CAACS,UARf;AASV;AACA,sBAAcT,UAAU,CAACU;AAVf,OAAd;AAYH,KAlDkB;;AAAA,SAoDnBC,YApDmB,GAoDJC,OAAO,IAAI;AAC5BjD,MAAAA,gBAAgB,CAACiD,OAAD,CAAhB,CACEC,IADF,CACOC,OAAO,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCF,OAAO,CAAC,CAAD,CAAxC;AACA,eAAOjD,SAAS,CAACiD,OAAO,CAAC,CAAD,CAAR,CAAhB;AACA,OAJF,EAKED,IALF,CAKOI,MAAM,IAAI;AACf,aAAKrB,QAAL,CAAc;AACbY,UAAAA,YAAY,EAAEI,OADD;AAEbK,UAAAA,MAAM,EAAEA,MAFK;AAGbC,UAAAA,eAAe,EAACD,MAAM,CAACE,GAHV;AAIbC,UAAAA,cAAc,EAACH,MAAM,CAACI;AAJT,SAAd,EADe,CAOf;AACD,OAbD,EAaGC,KAbH,CAaSC,KAAK,IAAIR,OAAO,CAACQ,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAblB;AAcA,KAnEqB;;AAAA,SAqEnBC,YArEmB,GAqEJC,KAAK,IAAI;AACpB,WAAK7B,QAAL,CAAc;AAAE,SAAC6B,KAAK,CAACC,MAAN,CAAaxC,IAAd,GAAqBuC,KAAK,CAACC,MAAN,CAAaC;AAApC,OAAd;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAsCS,KAAK,CAACC,MAAN,CAAaC,KAAnD;AACH,KAxEkB;;AAAA,SA0EnBC,YA1EmB,GA0EJC,CAAC,IAAI;AAChB,WAAKjC,QAAL,CAAc;AACnBkC,QAAAA,YAAY,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADP,OAAd;AAGAD,MAAAA,CAAC,CAACG,cAAF;AACA,UAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AAEAD,MAAAA,IAAI,CAACE,MAAL,CAAY,YAAZ,EAAyB,KAAKJ,KAAL,CAAWK,IAApC;AACAH,MAAAA,IAAI,CAACE,MAAL,CAAY,YAAZ,EAAyB,KAAKJ,KAAL,CAAW3B,UAApC;AACA6B,MAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAwB,KAAKJ,KAAL,CAAW1B,SAAnC;AACA4B,MAAAA,IAAI,CAACE,MAAL,CAAY,YAAZ,EAAyB,KAAKJ,KAAL,CAAWzB,UAApC;AACA2B,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAuB,KAAKJ,KAAL,CAAWxB,QAAlC;AACA0B,MAAAA,IAAI,CAACE,MAAL,CAAY,cAAZ,EAA2B,KAAKJ,KAAL,CAAWvB,YAAtC;AACAyB,MAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAwB,KAAKJ,KAAL,CAAW5B,SAAnC;AACA8B,MAAAA,IAAI,CAACE,MAAL,CAAY,qBAAZ,EAAkC,CAAlC;AACAF,MAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuB,KAAK1C,KAAL,CAAWQ,MAAlC;AAEA,YAAMoC,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAI,MADC;AAEXC,QAAAA,OAAO,EAAG;AACNC,UAAAA,aAAa,EAAI,YAAY,KAAKT,KAAL,CAAWpC,IAAX,CAAgBO;AADvC,SAFC;AAKXuC,QAAAA,IAAI,EAAMR;AALC,OAAf;AAQAS,MAAAA,KAAK,WAAIhF,WAAW,EAAf,mBAAiC2E,MAAjC,CAAL,CACCxB,IADD,CACO8B,QAAD,IAAc;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHD,EAIC/B,IAJD,CAIOoB,IAAD,IAAU;AACZ,YAAIA,IAAJ,EAAU;AACN,eAAKrC,QAAL,CAAc;AACVkC,YAAAA,YAAY,EAAE,CAAC,KAAKC,KAAL,CAAWD,YADhB;AAEVe,YAAAA,UAAU,EAAC;AAFD,WAAd;AAIH;AACJ,OAXD,EAWGvB,KAXH,CAWSO,CAAC,IAAI;AACV,aAAKjC,QAAL,CAAc;AACVU,UAAAA,UAAU,EAAE,EADF;AAEVuC,UAAAA,UAAU,EAAE,KAFF;AAGVf,UAAAA,YAAY,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAHhB,SAAd;AAKAgB,QAAAA,KAAK,CAACjB,CAAC,CAACkB,OAAH,CAAL;AACH,OAlBD;AAmBH,KAtHkB;;AAAA,SAwHtBC,kBAxHsB,GAwHAnB,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACG,cAAF;AACA,UAAIiB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAId,IAAI,GAAGP,CAAC,CAACH,MAAF,CAASyB,KAAT,CAAe,CAAf,CAAX;;AAEA,UAAIf,IAAJ,EAAU;AACNa,QAAAA,MAAM,CAACG,aAAP,CAAqBhB,IAArB;;AACAa,QAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACrB,eAAKzD,QAAL,CAAc;AACVwC,YAAAA,IAAI,EAAcA,IADR;AAEVkB,YAAAA,eAAe,EAAEL,MAAM,CAACM,MAFd;AAGVC,YAAAA,UAAU,EAAEpB,IAHF;AAIV1B,YAAAA,UAAU,EAAEuC,MAAM,CAACM;AAJT,WAAd;AAMH,SAPD;AAQH;AACJ,KAxIkB;;AAAA,SA0InBE,cA1ImB,GA0ID5B,CAAD,IAAO;AACpB,UAAI,KAAKE,KAAL,CAAW2B,aAAX,IAA4B,KAAK3B,KAAL,CAAW4B,gBAA3C,EAA6D;AACzD,aAAK/D,QAAL,CAAc;AACVgE,UAAAA,wBAAwB,EAAE;AADhB,SAAd;AAGH,OAJD,MAIO;AAEH,aAAKhE,QAAL,CAAc;AACVkC,UAAAA,YAAY,EAAE,CAAC,KAAKC,KAAL,CAAWD,YADhB;AAEV8B,UAAAA,wBAAwB,EAAE;AAFhB,SAAd;AAIA/B,QAAAA,CAAC,CAACG,cAAF;AAEA,YAAIC,IAAI,GAAG;AACP,2BAAiB,KAAKF,KAAL,CAAW2B,aADrB;AAEP,iCAAuB,CAFhB;AAGPG,UAAAA,OAAO,EAAE,KAAKpE,KAAL,CAAWQ;AAHb,SAAX;AAKAxC,QAAAA,KAAK,CAACqG,IAAN,WAAcpG,WAAW,EAAzB,mBAA2CuE,IAA3C,EAAiD;AAC7CM,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE,YAAY,KAAKT,KAAL,CAAWpC,IAAX,CAAgBO;AADtC;AADoC,SAAjD,EAKEW,IALF,CAKOkD,GAAG,IAAI;AACV,eAAKnE,QAAL,CAAc;AACVkC,YAAAA,YAAY,EAAE,CAAC,KAAKC,KAAL,CAAWD,YADhB;AAEVkC,YAAAA,wBAAwB,EAAE;AAFhB,WAAd;AAIH,SAVD,EAUG1C,KAVH,CAUS2C,GAAG,IAAI;AACZlD,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiD,GAArB;AACA,eAAKrE,QAAL,CAAc;AACViD,YAAAA,UAAU,EAAE,KADF;AAEVf,YAAAA,YAAY,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAFhB,WAAd;AAIH,SAhBD;AAiBH;AACJ,KA9KkB;;AAAA,SAgLnBoC,mBAhLmB,GAgLG,MAAM;AACxB,WAAKtE,QAAL,CAAc;AACZiD,QAAAA,UAAU,EAAC,CAAC,KAAKd,KAAL,CAAWc;AADX,OAAd;AAGH,KApLkB;;AAAA,SAsLnBsB,2BAtLmB,GAsLW,MAAM;AAChC,WAAKvE,QAAL,CAAc;AACVoE,QAAAA,wBAAwB,EAAC;AADf,OAAd;AAGH,KA1LkB;;AAAA,SA4LnBI,kBA5LmB,GA4LE5D,YAAY,IAAI;AACvC,WAAKZ,QAAL,CAAc;AAAEY,QAAAA,YAAY,EAACA;AAAf,OAAd;AACA,KA9LqB;;AAEf,SAAK6D,SAAL,GAAiBvI,KAAK,CAACwI,SAAN,EAAjB;AACA,SAAKvC,KAAL,GAAa;AACTc,MAAAA,UAAU,EAAE,KADH;AAETf,MAAAA,YAAY,EAAE,KAFL;AAGT8B,MAAAA,wBAAwB,EAAE,KAHjB;AAITI,MAAAA,wBAAwB,EAAE,KAJjB;AAKThE,MAAAA,UAAU,EAAE,EALH;AAMToC,MAAAA,IAAI,EAAE,EANG;AAOlBoB,MAAAA,UAAU,EAAE,EAPM;AAQTF,MAAAA,eAAe,EAAE,EARR;AAST9C,MAAAA,YAAY,EAAE,EATL;AAUT+D,MAAAA,MAAM,EAAE,CAVC;AAWTC,MAAAA,QAAQ,EAAE,CAXD;AAYTd,MAAAA,aAAa,EAAE,EAZN;AAaTC,MAAAA,gBAAgB,EAAE,EAbT;AAcTjD,MAAAA,UAAU,EAAC;AAdF,KAAb;AAgBH;;AA6KD+D,EAAAA,MAAM,GAAG;AAAA,sBAC8D,KAAK1C,KADnE;AAAA,QACAuB,eADA,eACAA,eADA;AAAA,QACiBoB,MADjB,eACiBA,MADjB;AAAA,QACyBC,OADzB,eACyBA,OADzB;AAAA,QACkC3E,UADlC,eACkCA,UADlC;AAAA,QAC8C8B,YAD9C,eAC8CA,YAD9C;AAAA,QAEC8C,OAFD,GAEa,KAAKnF,KAFlB,CAECmF,OAFD;;AAIL,QAAI,KAAK7C,KAAL,CAAWhC,OAAX,IAAsB,KAA1B,EAAkC;AAC9B,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI,0CACI;AAAK,MAAA,KAAK,EAAE;AACtBlB,QAAAA,OAAO,EAAC,MADc;AAEtBE,QAAAA,aAAa,EAAE,KAFO;AAGtBD,QAAAA,UAAU,EAAE,QAHU;AAIJ+F,QAAAA,cAAc,EAAE,YAJZ;AAKJ1F,QAAAA,SAAS,EAAE,EALP;AAMJ2F,QAAAA,UAAU,EAAE;AANR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASQ;AACA,MAAA,KAAK,EAAE;AACvBC,QAAAA,WAAW,EAAE,EADU;AAEvBC,QAAAA,MAAM,EAAE;AAFe,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMjB,oBAAC,IAAD;AACC,MAAA,EAAE,aADH;AAEC,MAAA,KAAK,EAAE;AACNC,QAAAA,cAAc,EAAE,MADV;AAENF,QAAAA,WAAW,EAAE;AAFP,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMC,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CANiB,CATR,EAyBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,CAzBU,CADJ,EA+BI;AAAK,MAAA,SAAS,EAAC,gBAAf;AACA,MAAA,KAAK,EAAE;AACH5F,QAAAA,SAAS,EAAE,EADR;AAEH2F,QAAAA,UAAU,EAAE,EAFT;AAGHC,QAAAA,WAAW,EAAE,EAHV;AAIHlG,QAAAA,OAAO,EAAC,MAJL;AAKHE,QAAAA,aAAa,EAAE,KALZ;AAMHD,QAAAA,UAAU,EAAE;AANT,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWA,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE8F,OAAO,CAAC1G,QAA7B;AAAuC,MAAA,IAAI,EAAE4D,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXA,EAeA,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE8C,OAAO,CAAChG,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKmD,KAAL,CAAWc,UAAX,IAAyB,IAAzB,GACA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKqB,mBAArB;AAA0C,MAAA,QAAQ,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA,GAIE,IANN,EAQQ;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,KAAKnC,KAAL,CAAWrB,UAAX,IAAyB,EAAzB,GAEA;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,KAAK,EAAE;AACHwE,QAAAA,OAAO,EAAE;AADN,OAFX;AAKI,MAAA,OAAO,EAAE,MAAM,KAAKC,sBAAL,CAA4BC,KAA5B,EALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOQ,oBAAC,MAAD;AACI,MAAA,SAAS,EAAER,OAAO,CAACvF,MADvB;AAEI,MAAA,GAAG,EAAE/B,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPR,CAFA,GAaa;AACT,MAAA,SAAS,EAAC,cADD;AAET,MAAA,KAAK,EAAE;AACH4H,QAAAA,OAAO,EAAE;AADN,OAFE;AAKT,MAAA,OAAO,EAAE,MAAM,KAAKC,sBAAL,CAA4BC,KAA5B,EALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAML,oBAAC,MAAD;AACI,MAAA,SAAS,EAAER,OAAO,CAACvF,MADvB;AAEI,MAAA,GAAG,EAAEiE,eAAe,IAAI,EAAnB,iEAA+E,KAAKvB,KAAL,CAAWrB,UAA1F,IAAwG4C,eAFjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANK,CAhBjB,EA6BA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClB;AACsB,MAAA,SAAS,MAD/B;AAEsB,MAAA,IAAI,EAAC,SAF3B;AAGsB,MAAA,QAAQ,EAAE,KAAKN,kBAHrC;AAIsB,MAAA,IAAI,EAAC,MAJ3B;AAKsB,MAAA,EAAE,EAAC,MALzB;AAMsB,MAAA,GAAG,EAAEmC,sBAAsB,IACtB,KAAKA,sBAAL,GAA8BA,sBAPzD;AASsB,MAAA,KAAK,EAAE;AAAEtG,QAAAA,OAAO,EAAE;AAAX,OAT7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,CA7BA,CARR,EAqDI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAE+F,OAAO,CAAC1F,IADvB;AAEI,MAAA,YAAY,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC,KAAK6C,KAAL,CAAW5B,SAJZ,CArDJ,EA2DI,oBAAC,UAAD;AACA,MAAA,KAAK,EAAC,eADN;AAEA,MAAA,OAAO,EAAC,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC,KAAK4B,KAAL,CAAWzB,UAJZ,CA3DJ,EAkEI;AACE,MAAA,KAAK,EAAE;AACLnB,QAAAA,SAAS,EAAE,EADN;AAELkG,QAAAA,YAAY,EAAE;AAFT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOA,oBAAC,IAAD;AACQ,MAAA,IAAI,MADZ;AAEQ,MAAA,EAAE,EAAE,EAFZ;AAGQ,MAAA,EAAE,EAAE,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJR,CAPA,EAiBA,oBAAC,IAAD;AACQ,MAAA,SAAS,MADjB;AAEQ,MAAA,OAAO,EAAE,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,oBAAC,IAAD;AACO,MAAA,IAAI,MADX;AAEO,MAAA,EAAE,EAAE,EAFX;AAGO,MAAA,EAAE,EAAE,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIO,oBAAC,SAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,KAAK,EAAC,UAFV;AAGI,MAAA,IAAI,EAAC,eAHT;AAII,MAAA,QAAQ,EAAE,KAAK7D,YAJnB;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,OAAO,EAAC,UANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJP,CAJL,EAmBI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,SAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,KAAK,EAAC,kBAFV;AAGI,MAAA,IAAI,EAAC,kBAHT;AAII,MAAA,QAAQ,EAAE,KAAKA,YAJnB;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,OAAO,EAAC,UANZ;AAOI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAW6B,wBAPtB;AAQI,MAAA,UAAU,EAAC,qDARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAnBJ,EAmCI,oBAAC,IAAD;AACC,MAAA,IAAI,MADL;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMQ,KAAK7B,KAAL,CAAWiC,wBAAX,IAAuC,IAAvC,GACA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKG,2BAArB;AAAkD,MAAA,QAAQ,EAAC,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADA,GAIE,IAVV,CAnCJ,EAiDI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKpC,KAAL,CAAW2B,aAAX,IAA4B,EAA5B,GACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKD,cAAtB;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,GASG,IAXP,CAjDJ,CAjBA,CAlEJ,CAfA,EAwKA;AAAM,MAAA,QAAQ,EAAE,KAAK7B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,EAGQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAE,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,SAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,KAAK,EAAC,YAFV;AAGI,MAAA,IAAI,EAAC,YAHT;AAII,MAAA,QAAQ,EAAE,KAAKJ,YAJnB;AAKI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAW3B,UALtB;AAMI,MAAA,eAAe,EAAE;AACbkF,QAAAA,MAAM,EAAE;AADK,OANrB;AASI,MAAA,OAAO,EAAC,UATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAJJ,EAqBI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,SAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,QAAQ,EAAE,KAAK9D,YAJnB;AAMI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAW1B,SANtB;AAOI,MAAA,eAAe,EAAE;AACbiF,QAAAA,MAAM,EAAE;AADK,OAPrB;AAUI,MAAA,OAAO,EAAC,UAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CArBJ,EAwCI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,SAAD;AACI,MAAA,SAAS,MADb,CAEI;AAFJ;AAGI,MAAA,KAAK,EAAC,WAHV;AAII,MAAA,IAAI,EAAC,WAJT;AAKI,MAAA,QAAQ,EAAE,KAAK9D,YALnB;AAOI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAW5B,SAPtB;AAQI,MAAA,eAAe,EAAE;AACbmF,QAAAA,MAAM,EAAE;AADK,OARrB;AAWI,MAAA,OAAO,EAAC,UAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAxCJ,EA2DI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,SAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,KAAK,EAAC,eAFV;AAGI,MAAA,IAAI,EAAC,YAHT;AAKI,MAAA,OAAO,EAAC,UALZ;AAMI,MAAA,eAAe,EAAE;AACbA,QAAAA,MAAM,EAAE;AADK,OANrB;AASI,MAAA,QAAQ,EAAE,KAAK9D,YATnB;AAUI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWzB,UAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CA3DJ,EA6EI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOA,oBAAC,UAAD;AACI,MAAA,OAAO,EAAE,IADb;AAEI,MAAA,KAAK,EAAE,KAAKyB,KAAL,CAAWxB,QAFtB;AAGI,MAAA,WAAW,EAAE,cAHjB,CAII;AAJJ;AAKI,MAAA,UAAU,EAAE;AACRrB,QAAAA,IAAI,EAAE,OADE;AAERqG,QAAAA,QAAQ,EAAE,IAFF;AAGRC,QAAAA,SAAS,EAAE;AAHH,OALhB;AAUI,MAAA,QAAQ,EAAEjF,QAAQ,IAAI,KAAKX,QAAL,CAAc;AAAEW,QAAAA;AAAF,OAAd,CAV1B;AAWI,MAAA,UAAU,EAAE;AACRkF,QAAAA,QAAQ,EAAE,EADF;AAERxG,QAAAA,KAAK,EAAC;AAFE,OAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,CA7EJ,EA4HtB,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEsB,oBAAC,kBAAD;AACpB,MAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWvB,YADE;AAEpB,MAAA,QAAQ,EAAE,KAAK4D,kBAFK;AAGpB,MAAA,QAAQ,EAAE,KAAKzD,YAHK,CAII;AAJJ;AAMpB,MAAA,KAAK,EAAE;AACN1B,QAAAA,KAAK,EAAE;AADD,OANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUpB,CAAC;AAAEyG,MAAAA,aAAF;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,sBAA9B;AAAsDC,MAAAA;AAAtD,KAAD,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AACC,MAAA,YAAY,EAAC,KADd;AAEC,MAAA,OAAO,EAAC,UAFT;AAGC,MAAA,QAAQ,MAHT;AAIC,MAAA,SAAS,MAJV;AAKC,MAAA,IAAI,EAAC,cALN;AAMC,MAAA,KAAK,EAAC;AANP,OAQKH,aAAa,CAAC;AACjBI,MAAAA,WAAW,EAAE,UADI;AAEjBC,MAAAA,SAAS,EAAE;AAFM,KAAD,CARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,EAeD;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEAF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFX,EAGAF,WAAW,CAACK,GAAZ,CAAgBC,UAAU,IAAI;AAC9B,YAAMF,SAAS,GAAGE,UAAU,CAAC1B,MAAX,GAChB,yBADgB,GAEhB,iBAFF,CAD8B,CAI9B;;AACA,YAAM2B,KAAK,GAAGD,UAAU,CAAC1B,MAAX,GACZ;AAAE7F,QAAAA,eAAe,EAAE,SAAnB;AAA8BsG,QAAAA,MAAM,EAAE;AAAtC,OADY,GAEZ;AAAEtG,QAAAA,eAAe,EAAE,SAAnB;AAA8BsG,QAAAA,MAAM,EAAE;AAAtC,OAFF;AAGA,aACA,6CACKY,sBAAsB,CAACK,UAAD,EAAa;AACvCF,QAAAA,SADuC;AAEvCG,QAAAA;AAFuC,OAAb,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMA;AACC,QAAA,KAAK,EAAE;AACNC,UAAAA,UAAU,EAAE,EADN;AAENC,UAAAA,aAAa,EAAE,EAFT;AAGNC,UAAAA,WAAW,EAAE,CAHP;AAINC,UAAAA,YAAY,EAAE;AAJR,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGL,UAAU,CAACM,WAPd,CANA,CADA;AAkBA,KA1BA,CAHA,CAfC,CAXoB,CAFtB,CA5HsB,EAgNI,oBAAC,IAAD;AACI,MAAA,EAAE,EAAE,EADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACI,MAAA,SAAS,EAAE3B,OAAO,CAACrG,UADvB;AAEQ,MAAA,IAAI,EAAC,QAFb;AAGQ,MAAA,KAAK,EAAC,SAHd;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CAFJ,CAhNJ,CADJ,CAHR,EAmOA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnOA,CAxKA,CA/BJ,CADJ;AAgbH;;AAznBiC;;AA0nBrC;AAED,eAAgBrB,UAAU,CAACc,MAAD,CAAV,CAAoBuB,YAApB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport './form.css';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n    colors,\n    Avatar\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { Link, Redirect } from 'react-router-dom';\nimport { withStyles} from '@material-ui/core/styles';\nimport { userContext, getUserById } from '../../utils/userContext';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport icon_camera from '../../assets/images/icon_camera.png';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport axios from 'axios';\nimport { urlFunction } from '../../utils/urls';\nimport {\n\tgeocodeByAddress,\n\tgeocodeByPlaceId,\n\tgetLatLng,\n} from 'react-places-autocomplete';\n  \nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport PhoneInput from 'react-phone-input-2'\n\nconst styles = theme => ({\n    backdrop: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tcolor: '#fff',\n\t},\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n        backgroundColor: colors.green[900]\n    }\n    },\n    content: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        textAlgin: 'center',\n        width: 700\n    },\n    name: {\n        marginTop: theme.spacing(1)\n    }, \n\n    avatar: {\n        height: 140,\n        width: 140\n    },\n});\n\nclass CustomerInfo extends Component  {\n    constructor(props) {\n        super(props)\n        this.selectImg = React.createRef();\n        this.state = {\n            showSucess: false,\n            openBackdrop: false,\n            showPAsswordConfirmError: false,\n            showSucessPasswordUpdate: false,\n            userResult: {},\n            file: '',\n\t\t\tlogoToSend: '',\n            imagePreviewUrl: '',\n            user_address: '',\n            active: 1,\n            unactive: 0,\n            password_user: '',\n            confirm_password: '',\n            photo_user:''\n        }\n    }\n\n    componentDidMount = async () => {\n\n        let user = await userContext();\n\n        if (user !== null) {\n          this.setState({\n            user: JSON.parse(user),\n            isLogin: true\n          })\n        } else {\n          this.setState({\n            isLogin: false\n          })\n        }\n\n        let userResult = await getUserById(this.props.iduser, JSON.parse(user).token);\n       \n        this.setState({\n            userResult: userResult,\n            'name_user': userResult.name_user,\n            'first_name': userResult.first_name,\n            'last_name':userResult.last_name,\n            'email_user': userResult.email_user,\n            'tel_user': userResult.tel_user,\n            'user_address': userResult.user_address, \n            'actif_user': userResult.actif_user, \n            // 'imagePreviewUrl': userResult.photo_user,\n            'photo_user': userResult.photo_user,\n        })   \n    }\n\n    handleSelect = address => {\n\t\tgeocodeByAddress(address)\n\t\t\t.then(results => {\n\t\t\t\tconsole.log(\"Adress full result\",results[0])\n\t\t\t\treturn\tgetLatLng(results[0])\t\n\t\t\t})\n\t\t\t.then(latLng => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tuser_address:\taddress,\n\t\t\t\t\tlatLng: latLng,\n\t\t\t\t\tlong_restaurant:latLng.lng,\n\t\t\t\t\tlat_restaurant:latLng.lat,\n\t\t\t\t})\n\t\t\t\t// console.log('get lat', { latLng  })\n\t\t}).catch(error => console.error('Error', error));\n\t};\n\t\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n        console.log(\" event.target.value  \",  event.target.value )\n    };\n\n    handleSubmit = e => {\n        this.setState({\n\t\t\topenBackdrop: !this.state.openBackdrop\n\t\t})\n        e.preventDefault(); \n        let data = new FormData()\n\n        data.append('photo_user',this.state.file)\n        data.append('first_name',this.state.first_name)\n        data.append('last_name',this.state.last_name)\n        data.append('email_user',this.state.email_user)\n        data.append('tel_user',this.state.tel_user)\n        data.append('user_address',this.state.user_address)\n        data.append('name_user',this.state.name_user)\n        data.append('is_first_time_login',1)\n        data.append('id_user', this.props.iduser,)\n\n        const config = {\n            method  : 'POST',\n            headers : {\n                Authorization  : 'bearer ' + this.state.user.token,\n            },\n            body    : data,\n        };\n\n        fetch(`${urlFunction()}/user/update`, config)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            if (data) {\n                this.setState({\n                    openBackdrop: !this.state.openBackdrop,\n                    showSucess:true\n                })\n            }\n        }).catch(e => {\n            this.setState({\n                email_user: '',\n                showSucess: false,\n                openBackdrop: !this.state.openBackdrop\n            })\n            alert(e.message)\n        })\n    };\n\n\t_handleImageChange = (e) => {\t\n        e.preventDefault();\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        if (file) {\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                this.setState({\n                    file            : file,\n                    imagePreviewUrl: reader.result,\n                    logoToSend: file,\n                    photo_user: reader.result,\n                });\n            };\n        }\n    }\n\n    updatePassword = (e) => {\n        if (this.state.password_user != this.state.confirm_password) {\n            this.setState({\n                showPAsswordConfirmError: true\n            })\n        } else {\n\n            this.setState({\n                openBackdrop: !this.state.openBackdrop,\n                showPAsswordConfirmError: false\n            })\n            e.preventDefault();\n    \n            let data = {\n                'password_user': this.state.password_user,\n                'is_first_time_login': 1,\n                id_user: this.props.iduser\n            }\n            axios.post(`${urlFunction()}/user/update`, data, {\n                headers: {\n                    Authorization: 'bearer ' + this.state.user.token,\n                },\n            }\n            ).then(res => {\n                this.setState({\n                    openBackdrop: !this.state.openBackdrop,\n                    showSucessPasswordUpdate: true,\n                })\n            }).catch(err => {\n                console.log(\"error\", err)\n                this.setState({\n                    showSucess: false,\n                    openBackdrop: !this.state.openBackdrop\n                })\n            })\n        }\n    }\n    \n    handleCloseSnackbar = () => {\n        this.setState({\n          showSucess:!this.state.showSucess\n        })\n    }\n\n    handleCloseSnackbarPassWord = () => {\n        this.setState({\n            showSucessPasswordUpdate:false\n        })\n    }\n      \n    handleChangeAdress = user_address => {\n\t\tthis.setState({ user_address:user_address });\n\t};\n     \n    render() {\n        let {imagePreviewUrl, values ,profile, userResult, openBackdrop} = this.state;\n        let { classes } = this.props;\n\n        if (this.state.isLogin == false ) {\n            return <Redirect to='/' />\n        }\n\n        return (  \n            <>        \n                <div style={{\n\t\t\t\t\t\tdisplay:'flex',\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\talignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                        marginTop: 80,\n                        marginLeft: 12,\n\t\t\t\t\t\t}}> \n\t\t\t\t\t\t\n                        <div \n                        style={{\n\t\t\t\t\t\t\t\tmarginRight: 16,\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={`/customer`}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttextDecoration: \"none\",\n\t\t\t\t\t\t\t\t\tmarginRight: 10,\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<ArrowBackIcon color='primary' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2> Edit profile </h2>\n\t\t\t\t\t\t</div>\n                </div>\n                \n                <div className=\"contentBoxInfo\"\n                style={{\n                    marginTop: 90,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    display:\"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"flex-start\",\n                }}>\n              \n                \n                <Backdrop className={classes.backdrop} open={openBackdrop} >\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <CardContent className={classes.content}>\n                {\n                    this.state.showSucess == true ? \n                    <Alert onClose={this.handleCloseSnackbar} severity=\"success\">\n                        Informations 're update\n                    </Alert>\n                    : null\n                }\n                        <div className=\"avatar\">\n                            \n                        {\n                            this.state.photo_user == '' ?\n            \n                            <div\n                                className=\"imageContent\"\n                                style={{\n                                    padding: 20\n                                }}\n                                onClick={() => this.fileInputForProfilePic.click()}>\n                                    \n                                    <Avatar \n                                        className={classes.avatar}\n                                        src={icon_camera}\n                                    />\n                                </div> : <div\n                                className=\"imageContent\"\n                                style={{\n                                    padding: 20\n                                }}\n                                onClick={() => this.fileInputForProfilePic.click()}>\n                                    <Avatar \n                                        className={classes.avatar}\n                                        src={imagePreviewUrl == '' ? `http://3.12.104.179:3001/api/v2/api/path?img_profil=${this.state.photo_user}`: imagePreviewUrl }    \n                                    />\n                            </div>                         \n                        }\n                        \n                        <Grid item xs={12}>\n\t\t\t\t\t\t<input\n                            fullWidth\n                            name=\"address\"\n                            onChange={this._handleImageChange}  \n                            type=\"file\"\n                            id='file'\n                            ref={fileInputForProfilePic =>\n                                (this.fileInputForProfilePic = fileInputForProfilePic)\n                              }\n                            style={{ display: 'none' }}\n                                \n                         />\n                        </Grid>\n                        \n                    </div>\n                    <Typography\n                        className={classes.name}\n                        gutterBottom\n                    >\n                    {this.state.name_user} \n                    </Typography>\n                    <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                    >\n                    {this.state.email_user}\n                    </Typography>\n\n                    <div\n                      style={{\n                        marginTop: 40,\n                        marginBottom: 20,\n                        \n                    }}>\n\n                    <Grid\n                            item\n                            md={12}\n                            xs={12}>\n                            <Typography variant=\"body2\"\n                          >\n                                Update password  \n                            </Typography>                           \n                        </Grid>\n                    \n                    <Grid\n                            container\n                            spacing={4}>\n                        \n                         <Grid\n                                item\n                                md={12}\n                                xs={12} >\n                                <TextField\n                                    fullWidth\n                                    label=\"Password\"\n                                    name=\"password_user\"\n                                    onChange={this.handleChange}\n                                    type=\"password\"\n                                    variant=\"outlined\"\n                                    \n                                />\n                        </Grid>\n                        \n                        <Grid\n                            item\n                            md={12}\n                            xs={12}>\n            \n                            <TextField\n                                fullWidth\n                                label=\"Confirm password\"\n                                name=\"confirm_password\"\n                                onChange={this.handleChange}\n                                type=\"password\"\n                                variant=\"outlined\"\n                                error={this.state.showPAsswordConfirmError}\n                                helperText=\" Confirm password can't be different than password \"\n                            />\n                        </Grid>\n                        <Grid\n                         item\n                            md={12}\n                            xs={12}>\n                        \n                            {\n                                this.state.showSucessPasswordUpdate == true ? \n                                <Alert onClose={this.handleCloseSnackbarPassWord} severity=\"success\">\n                                    The password have been updated\n                                </Alert>\n                                : null\n                            }\n                        </Grid>\n\n                        <Grid>\n                        {\n                            this.state.password_user != '' ?\n                                <CardActions>\n                                    <Button onClick={this.updatePassword}\n                                        type=\"submit\"\n                                        color=\"primary\"\n                                        variant=\"contained\">\n                                        Update password\n                                    </Button>\n                            </CardActions>\n                             : null\n                        }\n    \n                        </Grid>\n                    </Grid>\n\n                    </div>\n                </CardContent>     \n                \n\n                <form onSubmit={this.handleSubmit}>\n                    <CardHeader title=\"Profile\" />                   \n                        <Divider />\n                        <CardContent>\n                            <Grid\n                                container\n                                spacing={4}>\n\n                                <Grid\n                                    item\n                                    md={6}\n                                    xs={12}>\n                                        \n                                    <TextField\n                                        fullWidth\n                                        label=\"First name\"\n                                        name=\"first_name\"\n                                        onChange={this.handleChange}                                \n                                        value={this.state.first_name}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    md={6}\n                                    xs={12}>\n                                \n                                    <TextField\n                                        fullWidth\n                                        label=\"Last name\"\n                                        name=\"last_name\"\n                                        onChange={this.handleChange}\n                                    \n                                        value={this.state.last_name}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                \n                                <Grid\n                                    item\n                                    md={12}\n                                    xs={12}>\n                                        \n                                    <TextField\n                                        fullWidth\n                                        // helperText=\"Please specify the first name\"\n                                        label=\"User name\"\n                                        name=\"name_user\"\n                                        onChange={this.handleChange}\n                                    \n                                        value={this.state.name_user}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    md={6}\n                                    xs={12}\n                                    >\n                                    <TextField\n                                        fullWidth\n                                        label=\"Email Address\"\n                                        name=\"email_user\"\n                                                                \n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.handleChange}\n                                        value={this.state.email_user}\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    md={6}\n                                    xs={12}\n                                    >\n\n\n                                <PhoneInput\n                                    country={'us'}\n                                    value={this.state.tel_user}\n                                    placeholder={'Phone number'}\n                                    // onlyCountries={['ca', 'ht', 'us']}\n                                    inputProps={{\n                                        name: 'phone',\n                                        required: true,\n                                        autoFocus: false\n                                    }}\n                                    onChange={tel_user => this.setState({ tel_user })}\n                                    inputStyle={{\n                                        paddding: 12,\n                                        width:'100%'\n                                    }}\n                                />\n\n                                </Grid>\n                              \n                                {/* <Grid\n                                    item\n                                    md={12}\n                                    xs={12}\n                                    >\n                                \n                                    <TextField\n                                        fullWidth\n                                        label=\"Full address\"\n                                        name=\"user_address\"\n                                        onChange={this.handleChange}\n                                    \n                                        value={this.state.user_address}\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Grid> */}\n\n\n\t\t\t\t\t\t<Grid item xs={12}>\t\t\t\t\t\t\t\n\n                            <PlacesAutocomplete\n\t\t\t\t\t\t\t\tvalue={this.state.user_address}\n\t\t\t\t\t\t\t\tonChange={this.handleChangeAdress}\n\t\t\t\t\t\t\t\tonSelect={this.handleSelect}\n                                // shouldFetchSuggestions={}\n                                    \n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: '100%'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<TextField\t\t\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tname=\"user_address\"\n\t\t\t\t\t\t\t\t\t\tlabel=\" Address\"\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t{...getInputProps({\n\t\t\t\t\t\t\t\t\t\t\tplaceholder: 'Address ',\n\t\t\t\t\t\t\t\t\t\t\tclassName: 'location-search-input',\n\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"autocomplete-dropdown-container\"\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t{loading && <div>Loading...</div>}\n\t\t\t\t\t\t{suggestions.map(suggestion => {\n\t\t\t\t\t\t\tconst className = suggestion.active\n\t\t\t\t\t\t\t? 'suggestion-item--active'\n\t\t\t\t\t\t\t: 'suggestion-item';\n\t\t\t\t\t\t\t// inline style for demonstration purpose\n\t\t\t\t\t\t\tconst style = suggestion.active\n\t\t\t\t\t\t\t? { backgroundColor: '#fafafa', cursor: 'pointer' }\n\t\t\t\t\t\t\t: { backgroundColor: '#ffffff', cursor: 'pointer' };\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t{...getSuggestionItemProps(suggestion, {\n\t\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tpaddingTop: 10,\n\t\t\t\t\t\t\t\t\tpaddingBottom: 10,\n\t\t\t\t\t\t\t\t\tpaddingLeft: 4,\n\t\t\t\t\t\t\t\t\tpaddingRight: 4\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>{suggestion.description}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t</PlacesAutocomplete>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t</Grid>\t\n            \n                                {/* Check who connect to handle this  */}\n                                {/* <Grid\n                                    item\n                                    md={12}\n                                    xs={12}\n                                    >\n                                    <Typography variant=\"h6\"> Available </Typography>\n                                    <Typography variant=\"body2\">\n\n                                        \n                                    </Typography>\n                                    <Switch\n                                        checked={parseInt(this.state.actif_user)}\n                                        color=\"secondary\"\n                                        edge=\"start\"\n                                        name=\"actif_user\"\n                                        onChange={this.handleChange}\n                                    />\n                                </Grid> */}\n                                <Grid\n                                    md={12}>\n                                    <CardActions>\n                                    <Button\n                                        className={classes.saveButton}\n                                            type=\"submit\"\n                                            color=\"primary\"\n                                        variant=\"contained\">\n                                        Save Changes\n                                    </Button>\n                                    </CardActions>\n                                </Grid>\n                            </Grid>\n                        \n                    </CardContent>\n                <Divider />         \n            </form>\n        </div>                                        \n            </>\n        )\n    }\n};\n\nexport default  withStyles(styles) (CustomerInfo);\n"]},"metadata":{},"sourceType":"module"}