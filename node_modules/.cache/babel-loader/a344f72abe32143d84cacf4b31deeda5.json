{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/management-taptapnow/src/components/StatisticSuperAdmin.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, Typography, Grid, colors, InputBase, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { userContext, getUserById } from '../utils/userContext';\nimport { getMenuStat, getOrdersStat, getPaymentStat } from '../utils/StatContext';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  content: {\n    padding: 0\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  titleWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n});\n\nclass StatisticSuperAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelectedDate = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setSelectedDate(date);\n    };\n\n    this.componentDidMount = async () => {\n      let user = await userContext();\n\n      if (user !== null) {\n        this.setState({\n          user: JSON.parse(user),\n          isLogin: true\n        });\n      } else {\n        this.setState({\n          isLogin: false\n        });\n      }\n\n      let userResult = await getUserById(JSON.parse(user).data.id_user, JSON.parse(user).token);\n\n      if (userResult.is_first_time_login == 0) {\n        this.setState({\n          isFirstTime: true\n        });\n      }\n\n      let objUser = {\n        id_user: userResult.id_user || 0,\n        userType: userResult.userTypeID || 0\n      };\n      let menuStat = await getMenuStat(objUser, this.state.user.token);\n      this.setState({\n        menuStat: menuStat\n      }); // -- Orders stat   \n\n      let orderStat = await getOrdersStat(objUser, this.state.user.token); // console.log(\" Data Order Stat \", orderStat)\n\n      let orderStatReview = orderStat.filter(el => el.status_fiche == 2);\n      let orderStatReady = orderStat.filter(el => el.status_fiche == 3);\n      let orderStatCompleted = orderStat.filter(el => el.status_fiche == 4);\n      let orderStatCancel = orderStat.filter(el => el.status_fiche == 5);\n      this.setState({\n        orderStatReview: orderStatReview,\n        orderStatReady: orderStatReady,\n        orderStatCompleted: orderStatCompleted,\n        orderStatCancel: orderStatCancel\n      });\n\n      if (orderStatCompleted.length > 0) {\n        this.setState({\n          OrderCompletedStatAmount: orderStatCompleted.map(row => row.montant_transaction).reduce((el, acc) => el + acc)\n        });\n      } // ==> getPaymentStat\n\n\n      let paymentStat = await getPaymentStat(objUser, this.state.user.token);\n\n      if (paymentStat.length > 0) {\n        this.setState({\n          paymentStat: paymentStat,\n          paymentStatAmount: paymentStat.map(row => row.amount).reduce((el, acc) => el + acc)\n        });\n      }\n    };\n\n    this.state = {\n      statistics: {\n        payout: 10,\n        projects: 123,\n        visitors: 120,\n        watching: 12\n      },\n      selectedDate: '2014-08-18T21:11:54',\n      user: {},\n      userResult: {},\n      menuStat: {},\n      orderStatReview: [],\n      orderStatReady: [],\n      orderStatCompleted: [],\n      orderStatCancel: [],\n      paymentStat: [],\n      paymentStatAmount: 0,\n      OrderCompletedStatAmount: 0\n    };\n  }\n\n  render() {\n    if (this.state.isLogin == false) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (this.state.isFirstTime == true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/customer_details/${this.state.user.data.id_user}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 14\n        }\n      });\n    }\n\n    let {\n      classes\n    } = this.props;\n    let {\n      statistics,\n      selectedDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      style: {\n        marginTop: 80,\n        paddingLeft: 20,\n        paddingRight: 20,\n        width: window.innerWidth - window.innerWidth / 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \" Overview for \", this.state.user.data ? this.state.user.data.email_user : null, \" \")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      alignItems: \"center\",\n      container: true,\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, this.state.menuStat.length), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \"Total dish\")), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, this.state.orderStatReview.length), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, \"Order need attention\")), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, this.state.orderStatCancel.length), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 27\n      }\n    }, \"Order Cancellation\")), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, this.state.orderStatReady.length), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 27\n      }\n    }, \"Order ready to pick up\")), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 27\n      }\n    }, this.state.orderStatCompleted.length), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 27\n      }\n    }, \"Order completed\"))), /*#__PURE__*/React.createElement(Grid, {\n      marginTop: 80,\n      alignItems: \"center\",\n      backgroundColor: '#ccc',\n      container: true,\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, \" $ \", this.state.OrderCompletedStatAmount.toFixed(2), \" USD \")), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, \"Total money for completed orders\")), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, \" $\", (this.state.paymentStatAmount - this.state.paymentStatAmount * (15 / 100)).toFixed(2), \" USD \")), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, \"Total money paid with 15% feed\")), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.item,\n      item: true,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, \"$ \", Math.abs(parseFloat(this.state.OrderCompletedStatAmount - this.state.paymentStatAmount).toFixed(2)), \" USD \")), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.overline,\n      variant: \"overline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 19\n      }\n    }, \"Next Payout\")))));\n  }\n\n}\n\n;\nexport default withStyles(styles)(StatisticSuperAdmin);","map":{"version":3,"sources":["/Users/apple/Desktop/management-taptapnow/src/components/StatisticSuperAdmin.js"],"names":["React","Component","PropTypes","makeStyles","Card","Typography","Grid","colors","InputBase","Button","withStyles","FilterListIcon","SearchIcon","Paper","DateFnsUtils","userContext","getUserById","getMenuStat","getOrdersStat","getPaymentStat","Redirect","NavLink","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","TableContainer","styles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","content","item","breakpoints","up","borderRight","divider","down","borderBottom","titleWrapper","display","alignItems","justifyContent","label","marginLeft","overline","marginTop","StatisticSuperAdmin","constructor","props","setSelectedDate","date","setState","selectedDate","handleDateChange","componentDidMount","user","JSON","parse","isLogin","userResult","data","id_user","token","is_first_time_login","isFirstTime","objUser","userType","userTypeID","menuStat","state","orderStat","orderStatReview","filter","el","status_fiche","orderStatReady","orderStatCompleted","orderStatCancel","length","OrderCompletedStatAmount","map","row","montant_transaction","reduce","acc","paymentStat","paymentStatAmount","amount","statistics","payout","projects","visitors","watching","render","classes","paddingLeft","paddingRight","width","window","innerWidth","flexDirection","email_user","toFixed","Math","abs","parseFloat"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card, Typography, Grid, colors,InputBase ,Button} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { userContext , getUserById} from '../utils/userContext';\nimport { getMenuStat, getOrdersStat, getPaymentStat} from '../utils/StatContext';\nimport { Redirect, NavLink } from 'react-router-dom';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport TableContainer from '@material-ui/core/TableContainer';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  content: {\n    padding: 0\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  titleWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n});\n\nclass StatisticSuperAdmin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          statistics: {\n            payout: 10,\n            projects: 123,\n            visitors: 120,\n            watching: 12,\n          },\n        selectedDate: '2014-08-18T21:11:54',\n        user: {},\n        userResult: {},\n        menuStat: {},\n        orderStatReview: [],\n        orderStatReady: [],\n        orderStatCompleted: [],\n        orderStatCancel: [],\n        paymentStat: [],\n        paymentStatAmount: 0,\n        OrderCompletedStatAmount: 0,\n          \n      }\n  }\n  \n  setSelectedDate = (date) => {\n    this.setState({ selectedDate: date })\n  }\n\n  handleDateChange = date => {\n    this.setSelectedDate(date);\n  };\n\n  componentDidMount = async () => {\n    let user = await userContext();\n    if (user !== null) {\n      this.setState({\n        user: JSON.parse(user),\n        isLogin: true, \n      })\n    } else {\n      this.setState({\n        isLogin: false\n      })\n    }\n  \n    let userResult = await getUserById(JSON.parse(user).data.id_user, JSON.parse(user).token);\n    if(userResult.is_first_time_login == 0){\n        this.setState({\n        isFirstTime: true\n        })\n    }\n\n    let objUser = {\n      id_user: userResult.id_user || 0, \n      userType:userResult.userTypeID || 0\n    }\n\n    let menuStat = await getMenuStat(objUser, this.state.user.token);\n    this.setState({\n      menuStat: menuStat\n    })\n\n    // -- Orders stat   \n    let orderStat = await getOrdersStat(objUser, this.state.user.token);\n\n    // console.log(\" Data Order Stat \", orderStat)\n    let orderStatReview = orderStat.filter(el => el.status_fiche == 2);\n    let orderStatReady = orderStat.filter(el => el.status_fiche == 3);\n    let orderStatCompleted = orderStat.filter(el => el.status_fiche == 4);\n    let orderStatCancel = orderStat.filter(el => el.status_fiche == 5); \n    \n    this.setState({\n      orderStatReview:orderStatReview, \n      orderStatReady:orderStatReady, \n      orderStatCompleted:orderStatCompleted, \n      orderStatCancel: orderStatCancel, \n      \n    })\n\n    if (orderStatCompleted.length > 0) {\n      this.setState({\n        OrderCompletedStatAmount: orderStatCompleted.map(row => row.montant_transaction).reduce((el, acc) => el + acc)\n      })\n    }\n      \n\n    // ==> getPaymentStat\n    let paymentStat = await getPaymentStat(objUser, this.state.user.token);\n    if (paymentStat.length > 0) {\n      this.setState({\n        paymentStat: paymentStat,\n        paymentStatAmount:paymentStat.map(row => row.amount).reduce((el,acc) => el + acc)\n      })\n    }\n\n  }\n\n  render() {\n    if (this.state.isLogin == false) {\n      return <Redirect to='/' />\n    }\n\n    if (this.state.isFirstTime == true) {\n      return <Redirect to={`/customer_details/${this.state.user.data.id_user}`} />\n    }\n    \n    let { classes } = this.props\n    let { statistics, selectedDate } = this.state\n   \n    return (\n        <TableContainer style={{\n              marginTop: 80,\n              paddingLeft: 20,\n              paddingRight: 20,\n              width:  window.innerWidth  -  ( window.innerWidth / 5),\n            }}>\n          \n            <div\n                style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent:\"space-between\"\n            }}>          \n            <h4> Overview for {this.state.user.data?this.state.user.data.email_user: null} </h4>                  \n            </div>\n            <Card>\n              <Grid\n                  alignItems=\"center\"\n                  container\n                  justify=\"space-between\">\n                  <Grid\n                    className={classes.item}\n                    item\n                    md={3}\n                    sm={6}\n                    xs={12}>\n                    <Typography variant=\"h4\">{this.state.menuStat.length}</Typography>\n                    <Typography\n                      className={classes.overline}\n                      variant=\"overline\">\n                      Total dish\n                    </Typography>\n                </Grid>\n            \n                <Grid\n                    className={classes.item}\n                    item\n                    md={3}  \n                    sm={6}\n                    xs={12}>\n                    <Typography variant=\"h4\">{this.state.orderStatReview.length}</Typography>\n                        <Typography\n                        className={classes.overline}\n                        variant=\"overline\">\n                      Order need attention\n                    </Typography>\n                  </Grid>\n  \n                  <Grid\n                      className={classes.item}\n                      item\n                      md={3}  \n                      sm={6}\n                      xs={12}\n                        >\n                        <Typography variant=\"h4\">{this.state.orderStatCancel.length}</Typography>\n                          <Typography\n                          className={classes.overline}\n                          variant=\"overline\"\n                          >\n                            Order Cancellation \n                        </Typography>\n                    </Grid>\n                    \n                    <Grid\n                      className={classes.item}\n                      item\n                      md={3}  \n                      sm={6}\n                      xs={12}\n                        >\n                        <Typography variant=\"h4\">{this.state.orderStatReady.length}</Typography>\n                          <Typography\n                          className={classes.overline}\n                          variant=\"overline\"\n                          >\n                            Order ready to pick up \n                        </Typography>\n                    </Grid>\n              \n                    <Grid\n                        className={classes.item}\n                        item\n                        md={3}  \n                        sm={6}\n                        xs={12}\n                        >\n                          <Typography variant=\"h4\">{this.state.orderStatCompleted.length}</Typography>\n                          <Typography\n                              className={classes.overline}\n                              variant=\"overline\"\n                            >\n                            Order completed\n                          </Typography>\n                      </Grid>\n          </Grid>\n          \n          <Grid\n            marginTop={80}\n            alignItems=\"center\"\n            backgroundColor={'#ccc'}\n            container\n            justify=\"space-between\">\n            \n            <Grid\n                  className={classes.item}\n                    item\n                    md={3}  \n                    sm={6}\n                    xs={12}\n                  >\n                  <div>\n                    <Typography variant=\"h4\"> $ {this.state.OrderCompletedStatAmount.toFixed(2)} USD </Typography>\n                  </div>\n                  <Typography\n                      className={classes.overline}\n                      variant=\"overline\">\n                    Total money for completed orders \n                  </Typography>\n              </Grid>\n    \n              \n            \n              <Grid\n                    className={classes.item}\n                    item\n                    md={3}  \n                    sm={6}\n                    xs={12}\n                  >\n                  <div>\n                <Typography variant=\"h4\"> $\n                 {(this.state.paymentStatAmount - (\n                  this.state.paymentStatAmount * (15/100)\n                )).toFixed(2)\n                } USD </Typography>\n                  </div>\n                  <Typography\n                      className={classes.overline}\n                      variant=\"overline\"\n                    >\n                   Total money paid with 15% feed \n                  </Typography>\n            </Grid>\n            \n            {/* <Grid\n                    className={classes.item}\n                    item\n                    md={3}  \n                    sm={6}\n                    xs={12}\n                  >\n                  <div>\n                <Typography variant=\"h4\"> $ {\n                  (this.state.OrderCompletedStatAmount -\n                    (this.state.paymentStatAmount - (\n                      this.state.paymentStatAmount * (15/100)\n                    ))).toFixed(2)\n                } USD </Typography>\n                  </div>\n                  <Typography\n                      className={classes.overline}\n                      variant=\"overline\"\n                  >\n                   Total profit    \n                  </Typography>\n              </Grid> */}\n    \n              <Grid\n                    className={classes.item}\n                    item\n                    md={3}  \n                    sm={6}\n                    xs={12}\n                  >\n                  <div>\n                  <Typography variant=\"h4\">\n                  $ {\n                  Math.abs( (parseFloat(this.state.OrderCompletedStatAmount - this.state.paymentStatAmount).toFixed(2)))\n                  } USD </Typography>\n                  </div>\n                  <Typography\n                      className={classes.overline}\n                      variant=\"overline\"\n                    >\n                   Next Payout \n                  </Typography>\n              </Grid>\n          </Grid>\n        </Card>\n      </TableContainer>\n        )\n      }\n  };\n  \n  export default withStyles(styles) (StatisticSuperAdmin)\n"]},"metadata":{},"sourceType":"module"}