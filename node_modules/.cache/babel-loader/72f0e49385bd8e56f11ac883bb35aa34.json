{"ast":null,"code":"import axios from 'axios';\nimport { urlFunction } from '../utils/urls'; // list of restaurant count \n\nexport let listRestaurantCount = async () => {\n  try {\n    let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/count/data\"));\n    let data = res.data;\n    return data;\n  } catch (error) {\n    alert(error.message);\n    return [];\n  }\n}; // list of restaurant\n\nexport let listRestaurantContext = async (limit, offset) => {\n  try {\n    let d = {\n      limit,\n      offset\n    };\n    let res = await axios.post(\"\".concat(urlFunction(), \"/restaurant/all\"), d);\n    let data = res.data;\n    return data.length > 0 ? data : [];\n  } catch (error) {\n    alert(error.message);\n    return [];\n  }\n}; // list of restaurant without pagination\n\nexport let listRestaurantWithoutPagination = async () => {\n  try {\n    let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/get/all\"));\n    let data = res.data;\n    return data.length > 0 ? data.splice(0, 40) : [];\n  } catch (error) {\n    alert(error.message);\n    return [];\n  }\n}; // get restauran by id\n\nexport let getRestaurantById = async rest_id => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/\").concat(rest_id));\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // get orders -->\n\nexport let getOrdersByRestaurantId = async (rest_id, token) => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/orders/\").concat(rest_id), {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // get orders -->\n\nexport let getCompletedOrdersByRestaurantId = async (rest_id, token) => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/orders/completed/only/\").concat(rest_id), {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // Get order  -->> menu orders by with all object\n\nexport let getOrderMenuByIdFicheOrder = async (ficher_order_id, token) => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/orders/orders_details/\").concat(ficher_order_id), {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // get restaurant by \n\nexport let getRestaurantByIdUsers = async (id_user, token) => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/by_user/\").concat(id_user), {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // Payment admin \n\nexport let getPaymentByRestaurantId = async (id_res, token) => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/payment/admin/uniq/\").concat(id_res), {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // get all payment\n\nexport let getAdminPayment = async token => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/restaurant/payment/admin/all\"), {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // Search payment\n\nexport let searchPaymentId = async value => {\n  let d = {\n    'payment_id': value\n  };\n  let res = await axios.post(\"\".concat(urlFunction(), \"/restaurant/payment/admin/search\"), d);\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; //  filter payment by interval\n\nexport let filterPayementByDateInterval = async (d, token) => {\n  let res = await axios.post(\"\".concat(urlFunction(), \"/restaurant/payment/admin/search/by_interval/\"), d, {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // filter interest by interval\n\nexport let filterInterestByDateInterval = async (d, token) => {\n  let res = await axios.post(\"\".concat(urlFunction(), \"/insterest/search/by_interval/\"), d, {\n    headers: {\n      Authorization: 'bearer ' + token\n    }\n  });\n  let data = res.data;\n  return data.length > 0 ? data : [];\n}; // Get Interest \n\nexport let getInterestData = async () => {\n  let res = await axios.get(\"\".concat(urlFunction(), \"/interest/\"));\n  let data = res.data;\n  return data.length > 0 ? data : [];\n};","map":{"version":3,"sources":["/opt/management-taptapnow/src/utils/restaurantContext.js"],"names":["axios","urlFunction","listRestaurantCount","res","get","data","error","alert","message","listRestaurantContext","limit","offset","d","post","length","listRestaurantWithoutPagination","splice","getRestaurantById","rest_id","getOrdersByRestaurantId","token","headers","Authorization","getCompletedOrdersByRestaurantId","getOrderMenuByIdFicheOrder","ficher_order_id","getRestaurantByIdUsers","id_user","getPaymentByRestaurantId","id_res","getAdminPayment","searchPaymentId","value","filterPayementByDateInterval","filterInterestByDateInterval","getInterestData"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,OAAO,IAAIC,mBAAmB,GAAG,YAAY;AAC3C,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,4BAAhB;AACA,QAAII,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,WAAOA,IAAP;AACF,GAJA,CAIC,OAAOC,KAAP,EAAc;AACdC,IAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACA,WAAO,EAAP;AACA;AACF,CATM,C,CAWP;;AACA,OAAO,IAAIC,qBAAqB,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC1D,MAAI;AACJ,QAAIC,CAAC,GAAG;AACJF,MAAAA,KADI;AACGC,MAAAA;AADH,KAAR;AAGE,QAAIR,GAAG,GAAG,MAAMH,KAAK,CAACa,IAAN,WAAcZ,WAAW,EAAzB,sBAA8CW,CAA9C,CAAhB;AACA,QAAIP,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,WAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAkBT,IAAlB,GAAyB,EAAhC;AAEF,GARA,CAQC,OAAOC,KAAP,EAAc;AACdC,IAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACA,WAAO,EAAP;AACA;AACF,CAbM,C,CAgBP;;AACA,OAAO,IAAIO,+BAA+B,GAAG,YAAY;AACvD,MAAI;AACF,QAAIZ,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,yBAAhB;AACA,QAAII,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,WAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAkBT,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAc,EAAd,CAAlB,GAAsC,EAA7C;AACF,GAJA,CAIC,OAAOV,KAAP,EAAc;AACdC,IAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACA,WAAO,EAAP;AACA;AACF,CATM,C,CAaP;;AACA,OAAO,IAAIS,iBAAiB,GAAG,MAAOC,OAAP,IAAmB;AAChD,MAAIf,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,yBAAyCiB,OAAzC,EAAhB;AACA,MAAIb,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CAJM,C,CAMP;;AACA,OAAO,IAAIc,uBAAuB,GAAG,OAAOD,OAAP,EAAgBE,KAAhB,KAA0B;AAC7D,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,gCAAgDiB,OAAhD,GAChB;AACEG,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADZ,GADgB,CAAhB;AAMA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CATM,C,CAUP;;AACA,OAAO,IAAIkB,gCAAgC,GAAG,OAAOL,OAAP,EAAgBE,KAAhB,KAA0B;AACtE,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,+CAA+DiB,OAA/D,GAEhB;AACEG,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADZ,GAFgB,CAAhB;AAOA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CAVM,C,CAcP;;AACA,OAAO,IAAImB,0BAA0B,GAAG,OAAOC,eAAP,EAAwBL,KAAxB,KAAkC;AACxE,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,+CAA+DwB,eAA/D,GAChB;AACEJ,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADZ,GADgB,CAAhB;AAMA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CATM,C,CAWP;;AACA,OAAO,IAAIqB,sBAAsB,GAAG,OAAOC,OAAP,EAAgBP,KAAhB,KAA0B;AAC5D,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,iCAAiD0B,OAAjD,GAChB;AACEN,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADZ,GADgB,CAAhB;AAMA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAkBT,IAAlB,GAAyB,EAAhC;AAED,CAVM,C,CAYP;;AACA,OAAO,IAAIuB,wBAAwB,GAAG,OAAOC,MAAP,EAAeT,KAAf,KAAyB;AAC7D,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,4CAA4D4B,MAA5D,GAChB;AACER,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADZ,GADgB,CAAhB;AAMA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CATM,C,CAYP;;AACA,OAAO,IAAIyB,eAAe,GAAG,MAAOV,KAAP,IAAiB;AAC5C,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,oCAChB;AACEoB,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADZ,GADgB,CAAhB;AAMA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CATM,C,CAWP;;AACA,OAAO,IAAI0B,eAAe,GAAG,MAAOC,KAAP,IAAiB;AAC5C,MAAIpB,CAAC,GAAG;AAAE,kBAAcoB;AAAhB,GAAR;AACA,MAAI7B,GAAG,GAAG,MAAMH,KAAK,CAACa,IAAN,WAAcZ,WAAW,EAAzB,uCAA+DW,CAA/D,CAAhB;AAEA,MAAIP,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CANM,C,CAUP;;AACA,OAAO,IAAI4B,4BAA4B,GAAG,OAAOrB,CAAP,EAAUQ,KAAV,KAAoB;AAC5D,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACa,IAAN,WAAcZ,WAAW,EAAzB,oDAA4EW,CAA5E,EAChB;AACES,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADZ,GADgB,CAAhB;AAOA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CAVM,C,CAcP;;AACA,OAAO,IAAI6B,4BAA4B,GAAG,OAAOtB,CAAP,EAAUQ,KAAV,KAAoB;AAC5D,MAAIjB,GAAG,GAAG,MAAMH,KAAK,CAACa,IAAN,WAAcZ,WAAW,EAAzB,qCAA6DW,CAA7D,EAChB;AACIS,IAAAA,OAAO,EAAG;AACRC,MAAAA,aAAa,EAAI,YAAYF;AADrB;AADd,GADgB,CAAhB;AAOA,MAAIf,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CAVM,C,CAYP;;AACA,OAAO,IAAI8B,eAAe,GAAG,YAAY;AACvC,MAAIhC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,WAAaH,WAAW,EAAxB,gBAAhB;AACA,MAAII,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,SAAOA,IAAI,CAACS,MAAL,GAAc,CAAd,GAAmBT,IAAnB,GAAyB,EAAhC;AACD,CAJM","sourcesContent":["\nimport axios from 'axios';\nimport { urlFunction } from '../utils/urls';\n\n// list of restaurant count \nexport let listRestaurantCount = async () => {\n  try {\n    let res = await axios.get(`${urlFunction()}/restaurant/count/data`)\n    let data = res.data\n    return data\n } catch (error) {\n   alert(error.message)\n   return []\n  }\n};\n\n// list of restaurant\nexport let listRestaurantContext = async (limit, offset) => {\n  try {\n  let d = {\n      limit, offset\n    } \n    let res = await axios.post(`${urlFunction()}/restaurant/all`, d)\n    let data = res.data\n    return data.length > 0 ? data : [] \n    \n } catch (error) {\n   alert(error.message)\n   return []\n  }\n};\n\n\n// list of restaurant without pagination\nexport let listRestaurantWithoutPagination = async () => {\n  try {\n    let res = await axios.get(`${urlFunction()}/restaurant/get/all`)\n    let data = res.data\n    return data.length > 0 ? data.splice(0,40) : [] \n } catch (error) {\n   alert(error.message)\n   return []\n  }\n};\n\n\n\n// get restauran by id\nexport let getRestaurantById = async (rest_id) => {\n  let res = await axios.get(`${urlFunction()}/restaurant/${rest_id}`);\n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n// get orders -->\nexport let getOrdersByRestaurantId = async (rest_id, token) => {\n  let res = await axios.get(`${urlFunction()}/restaurant/orders/${rest_id}`,\n  {\n    headers : {\n      Authorization  : 'bearer ' + token,\n    },\n    });  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n// get orders -->\nexport let getCompletedOrdersByRestaurantId = async (rest_id, token) => {\n  let res = await axios.get(`${urlFunction()}/restaurant/orders/completed/only/${rest_id}`,\n   \n  {\n    headers : {\n      Authorization  : 'bearer ' + token,\n    },\n    });  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n\n\n// Get order  -->> menu orders by with all object\nexport let getOrderMenuByIdFicheOrder = async (ficher_order_id, token) => {\n  let res = await axios.get(`${urlFunction()}/restaurant/orders/orders_details/${ficher_order_id}`,\n  {\n    headers : {\n      Authorization  : 'bearer ' + token,\n    },\n  });  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n// get restaurant by \nexport let getRestaurantByIdUsers = async (id_user, token) => {\n  let res = await axios.get(`${urlFunction()}/restaurant/by_user/${id_user}`,\n  {\n    headers : {\n      Authorization  : 'bearer ' + token,\n    },\n  });  \n  let data = res.data\n  return data.length > 0 ? data : []\n  \n}\n\n// Payment admin \nexport let getPaymentByRestaurantId = async (id_res, token) => {\n  let res = await axios.get(`${urlFunction()}/restaurant/payment/admin/uniq/${id_res}`,\n  {\n    headers : {\n      Authorization  : 'bearer ' + token,\n    },\n  });  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n\n// get all payment\nexport let getAdminPayment = async (token) => {\n  let res = await axios.get(`${urlFunction()}/restaurant/payment/admin/all`,\n  {\n    headers : {\n      Authorization  : 'bearer ' + token,\n    },\n  });  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n// Search payment\nexport let searchPaymentId = async (value) => {\n  let d = { 'payment_id': value }\n  let res = await axios.post(`${urlFunction()}/restaurant/payment/admin/search`, d,\n  );  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n\n\n//  filter payment by interval\nexport let filterPayementByDateInterval = async (d, token) => {\n  let res = await axios.post(`${urlFunction()}/restaurant/payment/admin/search/by_interval/`, d,\n  {\n    headers : {\n      Authorization  : 'bearer ' + token,\n    },\n    }\n  );  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n\n\n// filter interest by interval\nexport let filterInterestByDateInterval = async (d, token) => {\n  let res = await axios.post(`${urlFunction()}/insterest/search/by_interval/`, d,\n  {\n      headers : {\n        Authorization  : 'bearer ' + token,\n      },\n    }\n  );  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n// Get Interest \nexport let getInterestData = async () => {\n  let res = await axios.get(`${urlFunction()}/interest/`,);  \n  let data = res.data\n  return data.length > 0  ? data :[]\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}