{"ast":null,"code":"var _jsxFileName = \"/opt/management-taptapnow/src/components/form/FormInvoice.js\";\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link, Redirect } from 'react-router-dom';\nimport { urlFunction } from '../../utils/urls';\nimport axios from \"axios\";\nimport { getOrdersByRestaurantId, getPaymentByRestaurantId, getRestaurantById, getCompletedOrdersByRestaurantId } from '../../utils/restaurantContext';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { userContext, getBankInfoByUserId } from '../../utils/userContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport { Card, CardActions, CardHeader, CardContent, Divider, Button, Table, TableBody, TableRow, TableCell, TextField, TableContainer, Paper } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Payment from '@material-ui/icons/Payment';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Empty from '../../utils/Empty';\n\nconst styles = theme => ({\n  root: {},\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  },\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  cardWidth: {\n    width: window.innerWidth / 2 - 50,\n    marginRight: 20\n  },\n  table: {\n    width: window.innerWidth / 2\n  }\n});\n\nclass FormCreateInvoice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpenDialog = () => {\n      this.setState({\n        openDialog: !this.state.openDialog\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        status_fiche: event.target.value\n      });\n    };\n\n    this.handleChangeNotes = event => {\n      this.setState({\n        notes: event.target.value\n      });\n    };\n\n    this.makePaymentToRestaurant = async () => {\n      this.setState({\n        openBackdrop: !this.state.openBackdrop\n      });\n      let data = {\n        \"restaurant_fk\": this.props.idRestaurant,\n        \"user_fk\": this.state.restaurant.adminRestID,\n        \"amount\": parseFloat(this.state.amountTransaction - this.state.amountAlreadyPay),\n        \"create_by_admin_fk\": this.state.user.data.id_user,\n        \"status_admin_payment\": 1,\n        'notes': this.state.notes,\n        \"email_user\": this.state.user.data.email_user,\n        \"name_user\": this.state.user.data.name_user,\n        \"date_of_last_order_restaurant\": this.state.date_of_last_order_restaurant\n      };\n      let res = await axios.post(\"\".concat(urlFunction(), \"/restaurant/payment/admin/\"), data, {\n        headers: {\n          Authorization: 'bearer ' + this.state.user.token\n        }\n      });\n\n      if (res.data != null) {\n        this.setState({\n          // openBackdrop: !this.state.openBackdrop,\n          showSucess: true\n        });\n        this.handleOpenDialog();\n        this.loadData();\n      }\n    };\n\n    this.handleCloseSnackbar = () => {\n      this.setState({\n        showSucess: !this.state.showSucess,\n        sendToRestaurantBack: true\n      });\n    };\n\n    this.loadData = async () => {\n      let user = await userContext();\n\n      if (user !== null) {\n        this.setState({\n          user: JSON.parse(user),\n          isLogin: true\n        });\n      } else {\n        this.setState({\n          isLogin: false\n        });\n      }\n\n      let invoices = await getPaymentByRestaurantId(this.props.idRestaurant, this.state.user.token);\n\n      if (invoices.length > 0) {\n        this.setState({\n          invoices: invoices || [],\n          amountAlreadyPay: invoices.map(el => el.amount).reduce((a, b) => a + b),\n          order: invoices[0],\n          customer: invoices[0]\n        });\n      } else {\n        this.setState({\n          invoices: invoices || [],\n          amountAlreadyPay: 0,\n          order: invoices[0],\n          customer: invoices[0]\n        });\n      }\n\n      let transactions = await getCompletedOrdersByRestaurantId(this.props.idRestaurant, this.state.user.token);\n\n      if (transactions.length > 0) {\n        this.setState({\n          transactions: transactions || [],\n          amountTransaction: transactions.map(el => el.montant_transaction).reduce((a, b) => a + b)\n        });\n      } else {\n        this.setState({\n          amountTransaction: 0\n        });\n      }\n\n      let restaurant = await getRestaurantById(this.props.idRestaurant);\n      this.setState({\n        restaurant: restaurant[0] || [],\n        order: restaurant[0],\n        customer: restaurant[0]\n      }); // get date of the last order for the current restaurant \n\n      let fiche_order = await getOrdersByRestaurantId(this.props.idRestaurant, this.state.user.token);\n      let dateOfLastPayment = new Date(fiche_order[fiche_order.length - 1].created_fiche);\n      let df = {\n        year: dateOfLastPayment.getFullYear(),\n        month: dateOfLastPayment.getMonth() + 1,\n        day: dateOfLastPayment.getUTCDay() + 1,\n        hour: dateOfLastPayment.getHours(),\n        minutes: dateOfLastPayment.getMinutes(),\n        sec: dateOfLastPayment.getSeconds()\n      };\n      this.setState({\n        fiche_order: fiche_order,\n        date_of_last_order_restaurant: df.year + \"-\" + df.month + \"-\" + df.day + \" \" + df.hour + \":\" + df.minutes + \":\" + df.sec\n      });\n      let bank_info_data = await getBankInfoByUserId(restaurant[0].id_user, JSON.parse(user).token);\n\n      if (bank_info_data.length > 0) {\n        this.setState({\n          bank_info: bank_info_data[0]\n        });\n      } else {\n        this.setState({\n          bankInfoEmpty: true\n        });\n      }\n    };\n\n    this.componentDidMount = async () => {\n      this.loadData();\n    };\n\n    this.state = {\n      customer: {},\n      restaurant: {},\n      order: {},\n      menus: [],\n      comment: '',\n      openBackdrop: false,\n      showSucess: false,\n      amountAlreadyPay: 0,\n      amountTransaction: 0,\n      sendToRestaurantBack: false,\n      openDialog: false,\n      date_of_last_order_restaurant: '',\n      bank_info: [],\n      bankInfoEmpty: false\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    let _this$state = this.state,\n        bank_info = _this$state.bank_info,\n        invoices = _this$state.invoices,\n        order = _this$state.order,\n        option = _this$state.option,\n        menus = _this$state.menus,\n        customer = _this$state.customer,\n        restaurant = _this$state.restaurant,\n        openBackdrop = _this$state.openBackdrop,\n        sendToRestaurantBack = _this$state.sendToRestaurantBack;\n    return React.createElement(TableContainer, {\n      style: {\n        marginTop: 80,\n        paddingLeft: 20,\n        paddingRight: 20,\n        width: window.innerWidth - 300,\n        height: window.innerHeight - 140\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Backdrop, {\n      className: classes.backdrop,\n      open: openBackdrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/restaurant_details/\".concat(this.props.idRestaurant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(ArrowBackIcon, {\n      className: classes.buttonIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"  Process payment for \", restaurant.name_restaurant, \"  \"))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.cardWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: 'Restaurant info ',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \" Administrator \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, restaurant.name_user, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \" \", restaurant.email_user, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \" \", restaurant.tel_user, \" \"))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \" Restaurant details \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Link, {\n      component: RouterLink,\n      to: \"/management/customers/1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, restaurant.name_restaurant), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \" \", restaurant.tel_restaurant, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \" \", restaurant.adresse_restaurant, \" \"))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"#\", this.props.idRestaurant)), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Date\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, moment(new Date().now).format('DD/MM/YYYY'))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Amount Already Pay\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"$ \", this.state.amountAlreadyPay.toFixed(2))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Current Amount\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"$ \", this.state.amountTransaction.toFixed(2))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Total to pay \")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"$ \", (this.state.amountTransaction - this.state.amountAlreadyPay).toFixed(2) > 0 ? (this.state.amountTransaction - this.state.amountAlreadyPay).toFixed(2) : \"0.00\", \" USD\"))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \" Tap Tap Now fees \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"15 %\")), React.createElement(TableRow, {\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Final total to pay  \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, (this.state.amountTransaction - this.state.amountAlreadyPay - (this.state.amountTransaction - this.state.amountAlreadyPay) * 15 / 100).toFixed(2) > 0 ? (this.state.amountTransaction - this.state.amountAlreadyPay - (this.state.amountTransaction - this.state.amountAlreadyPay) * 15 / 100).toFixed(2) : 0.00, \" $\"))))))), React.createElement(Table, {\n      className: classes.table,\n      component: Paper,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(ExpansionPanel, {\n      style: {\n        marginBottom: 20\n      },\n      defaultExpanded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      id: \"panel1a-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \" Bank infomations \"))), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \" Legal name \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \" Tax number\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \" Bank routing\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \" Account number\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \" Mailing address\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \" Phone line\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \" County tax rate \")), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \" \", bank_info.restaurant_legal_name, \" \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \" \", bank_info.tax_number, \" \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \" \", bank_info.bank_routing, \" \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \" \", bank_info.account_number, \" \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \" \", bank_info.mailing_address, \" \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \" \", bank_info.phone_line, \" \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \" \", bank_info.county_tax_rate, \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, this.state.bankInfoEmpty == true ? React.createElement(Empty, {\n      width: 100,\n      height: 100,\n      showText: true,\n      text: 'Please ask to the user to add his bank information',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }) : null)))), React.createElement(TableRow, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \" Notes \"), \" \")), React.createElement(TableRow, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      name: \"notes\",\n      value: this.state.notes,\n      onChange: this.handleChangeNotes,\n      id: \"outlined-multiline-static\",\n      label: \"Notes\",\n      multiline: true,\n      rows: \"4\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, this.state.amountTransaction.toFixed(2) - this.state.amountAlreadyPay.toFixed(2) > 10 ? React.createElement(CardActions, {\n      className: classes.actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.makePaymentToRestaurant,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Payment, {\n      className: classes.buttonIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), \"Create payment\")) : React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n      style: {\n        margin: 10,\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \"Can't process payment for  \", this.state.restaurant.name_restaurant, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }), \"FYI : Account's must be grader than 20 US $  to process payment for\"), React.createElement(CardActions, {\n      className: classes.actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/restaurant_details/\".concat(this.props.idRestaurant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(ArrowBackIcon, {\n      className: classes.buttonIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }), \"Back\"))))))), React.createElement(Dialog, {\n      disableBackdropClick: true,\n      open: this.state.openDialog,\n      onClose: this.handleOpenDialog,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, \"Informations\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, \"Payment have been successfully made for \", restaurant.name_restaurant)), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/restaurant_details/\".concat(this.props.idRestaurant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.agreeToSetRestaurant,\n      color: \"primary\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, \"Thank you\")))));\n  }\n\n}\n\n;\nexport default withStyles(styles)(FormCreateInvoice);","map":{"version":3,"sources":["/opt/management-taptapnow/src/components/form/FormInvoice.js"],"names":["React","Component","Link","RouterLink","moment","withStyles","Redirect","urlFunction","axios","getOrdersByRestaurantId","getPaymentByRestaurantId","getRestaurantById","getCompletedOrdersByRestaurantId","ArrowBackIcon","userContext","getBankInfoByUserId","CircularProgress","Alert","Card","CardActions","CardHeader","CardContent","Divider","Button","Table","TableBody","TableRow","TableCell","TextField","TableContainer","Paper","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Payment","Backdrop","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","Empty","styles","theme","root","backdrop","zIndex","drawer","color","content","padding","actions","flexDirection","alignItems","marginLeft","buttonIcon","marginRight","spacing","cardWidth","width","window","innerWidth","table","FormCreateInvoice","constructor","props","handleOpenDialog","setState","openDialog","state","handleChange","event","status_fiche","target","value","handleChangeNotes","notes","makePaymentToRestaurant","openBackdrop","data","idRestaurant","restaurant","adminRestID","parseFloat","amountTransaction","amountAlreadyPay","user","id_user","email_user","name_user","date_of_last_order_restaurant","res","post","headers","Authorization","token","showSucess","loadData","handleCloseSnackbar","sendToRestaurantBack","JSON","parse","isLogin","invoices","length","map","el","amount","reduce","a","b","order","customer","transactions","montant_transaction","fiche_order","dateOfLastPayment","Date","created_fiche","df","year","getFullYear","month","getMonth","day","getUTCDay","hour","getHours","minutes","getMinutes","sec","getSeconds","bank_info_data","bank_info","bankInfoEmpty","componentDidMount","menus","comment","render","classes","option","marginTop","paddingLeft","paddingRight","height","innerHeight","display","justifyContent","name_restaurant","tel_user","tel_restaurant","adresse_restaurant","now","format","toFixed","marginBottom","heading","restaurant_legal_name","tax_number","bank_routing","account_number","mailing_address","phone_line","county_tax_rate","backgroundColor","margin","agreeToSetRestaurant"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link as RouterLink } from 'react-router-dom';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link, Redirect } from 'react-router-dom';\nimport { urlFunction } from '../../utils/urls';\nimport axios from \"axios\"\nimport { getOrdersByRestaurantId, getPaymentByRestaurantId, getRestaurantById ,getCompletedOrdersByRestaurantId} from '../../utils/restaurantContext';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { userContext, getBankInfoByUserId } from '../../utils/userContext'; \n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField, TableContainer,\n  Paper,\n  \n} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Payment from '@material-ui/icons/Payment';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Empty from '../../utils/Empty';\n\n\nconst styles = theme => ({\n  root: {},\n  backdrop: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tcolor: '#fff',\n\t},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n    },\n   \n    cardWidth: {\n        width: window.innerWidth /2 -50,\n        marginRight: 20,\n  },\n  table: {\n    width: window.innerWidth / 2 ,\n  }\n})\n\nclass FormCreateInvoice extends Component {\n    constructor(props) {\n        super(props)\n          this.state = {  \n            customer: {},\n            restaurant:{},\n            order: {},\n            menus: [],\n            comment: '',\n            openBackdrop: false,\n            showSucess: false,      \n            amountAlreadyPay: 0,\n            amountTransaction:0,\n            sendToRestaurantBack: false,\n            openDialog: false,\n            date_of_last_order_restaurant: '',\n            bank_info: [],\n            bankInfoEmpty: false\n        }\n    }\n  \n    handleOpenDialog = () => {\n      this.setState({\n        openDialog:!this.state.openDialog\n      })\n    }\n  \n    handleChange = (event)=> {\n      this.setState({\n        status_fiche: event.target.value\n      })\n    }\n  \n    handleChangeNotes = (event) => {\n      this.setState({\n        notes: event.target.value\n      })\n    }\n\n    makePaymentToRestaurant = async () => {\n      this.setState({\n        openBackdrop: !this.state.openBackdrop\n      })       \n      let data = {\n        \"restaurant_fk\": this.props.idRestaurant,\n        \"user_fk\": this.state.restaurant.adminRestID,\n        \"amount\": parseFloat(this.state.amountTransaction - this.state.amountAlreadyPay) ,\n        \"create_by_admin_fk\":this.state.user.data.id_user,\n        \"status_admin_payment\": 1,\n        'notes': this.state.notes,\n        \"email_user\": this.state.user.data.email_user,\n        \"name_user\": this.state.user.data.name_user,\n        \"date_of_last_order_restaurant\": this.state.date_of_last_order_restaurant\n      }\n        \n      let res = await axios.post(`${urlFunction()}/restaurant/payment/admin/`, data,{\n          headers : {\n              Authorization  : 'bearer ' + this.state.user.token,\n          },\n      })\n      if (res.data != null) {\n          this.setState({\n              // openBackdrop: !this.state.openBackdrop,\n              showSucess: true\n          })\n        this.handleOpenDialog()\n        this.loadData()\n      }\n\t}\n    \n  handleCloseSnackbar = () => {\n      this.setState({\n        showSucess: !this.state.showSucess,\n        sendToRestaurantBack : true\n      })\n      \n  }\n\n  loadData = async () => {\n    let user = await userContext();\n    if (user !== null) {\n      this.setState({\n        user: JSON.parse(user),\n        isLogin: true\n      })\n    } else {\n      this.setState({\n        isLogin: false\n      })\n    }\n \n    let invoices = await getPaymentByRestaurantId(this.props.idRestaurant, this.state.user.token);\n    if (invoices.length > 0) {  \n        this.setState({\n            invoices: invoices || [],\n            amountAlreadyPay: invoices.map(el => el.amount).reduce((a, b) => a + b),\n            order: invoices[0],\n            customer: invoices[0],\n        })\n    } else {\n      this.setState({\n          invoices: invoices || [],\n          amountAlreadyPay: 0,\n          order: invoices[0],\n          customer: invoices[0],\n      })\n    }\n  \n    let transactions = await getCompletedOrdersByRestaurantId(this.props.idRestaurant, this.state.user.token);\n    if (transactions.length > 0) {  \n      this.setState({\n          transactions: transactions || [],\n          amountTransaction: transactions.map(el => el.montant_transaction).reduce((a, b) => a + b),\n      })\n    } else {\n      this.setState({\n        amountTransaction: 0,\n      })\n    }\n  \n    let restaurant = await getRestaurantById(this.props.idRestaurant);\n    this.setState({\n      restaurant: restaurant[0] || [],\n      order: restaurant[0],\n      customer: restaurant[0],\n    })\n\n\n    // get date of the last order for the current restaurant \n    let fiche_order = await getOrdersByRestaurantId(this.props.idRestaurant, this.state.user.token);\n    let dateOfLastPayment = new Date(fiche_order[fiche_order.length - 1].created_fiche);\n    let df = {\n      year: dateOfLastPayment.getFullYear(),\n      month: dateOfLastPayment.getMonth() + 1,\n      day: dateOfLastPayment.getUTCDay() + 1,\n      hour: dateOfLastPayment.getHours(),\n      minutes: dateOfLastPayment.getMinutes(),\n      sec: dateOfLastPayment.getSeconds()\n    }\n\n    \n    this.setState({\n      fiche_order: fiche_order,\n      date_of_last_order_restaurant:\n        df.year +\"-\"+ df.month +\"-\"+df.day +\" \"+  df.hour +\":\"+ df.minutes +\":\"+ df.sec\n    })     \n    \n\n    let bank_info_data = await getBankInfoByUserId( restaurant[0].id_user, JSON.parse(user).token);\n    if (bank_info_data.length > 0) { \n      this.setState({\n        bank_info: bank_info_data[0]\n      })\n    } else {\n      this.setState({\n        bankInfoEmpty: true\n      })\n    }\n  }\n\n  componentDidMount = async () => {\n    this.loadData()\n  }\n  \n  render() {   \n    const { classes } = this.props;\n    let { bank_info,invoices, order, option, menus, customer, restaurant, openBackdrop, sendToRestaurantBack} = this.state;\n    return (\n        <TableContainer style={{\n                marginTop: 80,\n                paddingLeft: 20,\n                paddingRight: 20,\n                width: window.innerWidth - 300,\n                height: window.innerHeight - 140,\n          }}>\n            \n            <Backdrop className={classes.backdrop} open={openBackdrop} >\n              <CircularProgress color=\"inherit\" />\n          </Backdrop>\n          \n          <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent:\"space-between\"\n            }}>\n           <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent:\"space-between\"\n            }}>\n\n            <Link to={\n              `/restaurant_details/${this.props.idRestaurant}`\n            }>\n                       \n            <ArrowBackIcon className={classes.buttonIcon}/>\n                        \n                       \n            </Link>\n            <h2>  Process payment for {restaurant.name_restaurant}  </h2>      \n           </div> \n          </div>\n            \n          <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems:'flex-start'\n            }}>\n            <Card className={classes.cardWidth}>\n              <CardHeader title={'Restaurant info '} />\n                \n                  <Divider />\n                    <CardContent className={classes.content}>\n                        <Table>\n                        <TableBody>\n                            <TableRow>\n                            <TableCell> Administrator </TableCell>\n                            <TableCell>\n                              \n                                {restaurant.name_user }\n\n                                <div> {restaurant.email_user } </div>\n                                <div> {restaurant.tel_user } </div>\n\n                            </TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell> Restaurant details </TableCell>\n                                <TableCell>\n                                    <Link\n                                    component={RouterLink}\n                                    to=\"/management/customers/1\"\n                                    >\n                                    {restaurant.name_restaurant} \n                                    </Link>\n                                    <div> {restaurant.tel_restaurant} </div>\n                                    <div> {restaurant.adresse_restaurant} </div>\n\n                                </TableCell>\n                            </TableRow>\n\n                            <TableRow >\n                                <TableCell>ID</TableCell>\n                                <TableCell>#{this.props.idRestaurant}</TableCell>\n                            </TableRow>\n                         \n                            <TableRow >\n                                <TableCell>Date</TableCell>\n                                <TableCell>\n                                    {moment(new Date().now).format('DD/MM/YYYY')}\n                                </TableCell>\n                            </TableRow>\n                         \n                            <TableRow >\n                                <TableCell>Amount Already Pay</TableCell>\n                                <TableCell>\n                                $ {this.state.amountAlreadyPay.toFixed(2) }\n                                </TableCell>\n                            </TableRow>\n                                  \n                            <TableRow >\n                                <TableCell>Current Amount</TableCell>\n                                <TableCell>\n                                $ {this.state.amountTransaction.toFixed(2)}\n                            </TableCell>\n                        </TableRow>\n                      \n                                  \n                        <TableRow>\n                        <TableCell> <b>Total to pay </b></TableCell>\n                        <TableCell>\n                        {/* {this.state.amountTransaction.toFixed(2)} -\n                        {this.state.amountAlreadyPay.toFixed(2)} = */}\n                        <b>\n                        $ {\n                          (this.state.amountTransaction - this.state.amountAlreadyPay).toFixed(2) > 0 ?\n                          (this.state.amountTransaction - this.state.amountAlreadyPay).toFixed(2): \"0.00\" \n                        } USD\n                        \n                        </b>            \n                        </TableCell>\n                            </TableRow>       \n                                <TableRow>\n                                    <TableCell> Tap Tap Now fees </TableCell>\n                                    <TableCell>\n                                        15 %\n                                    </TableCell>\n                                </TableRow>\n      \n                                <TableRow selected>\n                                    <TableCell>Final total to pay  </TableCell>\n                                    <TableCell>\n                                      <b>\n                                        {\n                                          ((this.state.amountTransaction - this.state.amountAlreadyPay) - (this.state.amountTransaction - this.state.amountAlreadyPay) * (15) / 100).toFixed(2) > 0 ?\n                                          ((this.state.amountTransaction - this.state.amountAlreadyPay) - (this.state.amountTransaction - this.state.amountAlreadyPay) * (15) / 100).toFixed(2)  :\n                                          0.00\n                                        } $\n                                      </b>\n                                    </TableCell>\n                                </TableRow>      \n                            </TableBody>\n                        </Table>\n                      </CardContent>\n                  </Card>\n\n                  <Table className={classes.table} component={Paper} aria-label=\"customized table\">\n\n            \n                  <ExpansionPanel\n                      style={{\n                        marginBottom: 20,\n                      }}\n                      defaultExpanded={true}>\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\">\n                      <Typography className={classes.heading}>\n                        <b> Bank infomations </b>\n                      </Typography>\n                \n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>                    \n                      <Table>\n                        <TableRow selected>\n                        <TableCell> Legal name </TableCell>\n                        <TableCell> Tax number</TableCell>\n                        <TableCell> Bank routing</TableCell>\n                        <TableCell> Account number</TableCell>\n                        <TableCell> Mailing address</TableCell>\n                        <TableCell> Phone line</TableCell>\n                        <TableCell> County tax rate </TableCell>\n                        </TableRow>\n                \n                    <TableRow>\n                      <TableCell> {bank_info.restaurant_legal_name} </TableCell>\n                      <TableCell> {bank_info.tax_number} </TableCell>\n                      <TableCell> {bank_info.bank_routing} </TableCell>\n                      <TableCell> {bank_info.account_number} </TableCell>\n                      <TableCell> {bank_info.mailing_address} </TableCell>\n                      <TableCell> {bank_info.phone_line} </TableCell>\n                      <TableCell> {bank_info.county_tax_rate} </TableCell>\n                  </TableRow>\n\n                  <div>\n                    {this.state.bankInfoEmpty == true ?\n                    <Empty width={100} height={100} showText={true} text={'Please ask to the user to add his bank information'}/>\n                        : null\n                    }\n                  </div>\n\n                  \n                  </Table>\n        \n                    </ExpansionPanelDetails>     \n                   </ExpansionPanel> \n            \n            \n                    <TableRow style={{\n                        backgroundColor: \"#fff\"\n                      }}>\n                \n                      <TableCell> <b> Notes </b> </TableCell>                        \n                      </TableRow>\n                      \n                      <TableRow style={{\n                          backgroundColor: \"#fff\"\n                        }}>\n                        <TableCell>    \n                            <TextField\n                                fullWidth\n                                name=\"notes\"\n                                value={this.state.notes }\n                                onChange={this.handleChangeNotes}\n\n                                id=\"outlined-multiline-static\"\n                                label=\"Notes\"\n                                multiline\n                                rows=\"4\"\n                                variant=\"outlined\"\n                            />\n                        </TableCell>                      \n                  </TableRow>\n                  <TableRow>\n                    \n                      \n                    { this.state.amountTransaction.toFixed(2) -\n                      this.state.amountAlreadyPay.toFixed(2) > 10 ?\n                          \n                        <CardActions className={classes.actions}>\n                          <Button\n                            variant=\"contained\"\n                            onClick={this.makePaymentToRestaurant} color='primary' >\n                              <Payment className={classes.buttonIcon}/>\n                                Create payment\n                            </Button>\n                            \n                          </CardActions>\n                  : <>\n                    <h4 style={{ margin: 10, color: 'red' }}>\n                        Can't process payment for  {this.state.restaurant.name_restaurant} <br/>FYI : Account's must be grader than 20 US $  to process payment for \n                      </h4>\n                    <CardActions className={classes.actions}>\n                      \n                      <Link to={\n                        `/restaurant_details/${this.props.idRestaurant}`\n                      }>\n                        <Button\n                        variant=\"contained\"\n                        color='primary' >\n                          <ArrowBackIcon className={classes.buttonIcon}/>\n                            Back \n                        </Button>\n                      </Link>\n\n                      </CardActions>\n                      </>\n                    }\n                  </TableRow>\n\n             \n          </Table>\n     \n         \n                    \n        </div>\n        \n        <Dialog\n          disableBackdropClick={true}\n          open={this.state.openDialog}\n          onClose={this.handleOpenDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\">\n          \n            <DialogTitle id=\"alert-dialog-title\">\n                Informations\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Payment have been successfully made for {restaurant.name_restaurant} \n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                \n                <Link to={`/restaurant_details/${this.props.idRestaurant}`}>\n                  <Button onClick={this.agreeToSetRestaurant} color=\"primary\" autoFocus>\n                    Thank you\n                  </Button>\n                </Link>\n                  \n            </DialogActions>\n          </Dialog>\n        </TableContainer>\n        );\n    }\n};\nexport default withStyles(styles)(FormCreateInvoice)\n"]},"metadata":{},"sourceType":"module"}